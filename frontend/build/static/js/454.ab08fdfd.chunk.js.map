{"version":3,"file":"static/js/454.ab08fdfd.chunk.js","mappings":"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","sources":["../node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/@ethereumjs/tx/src/fromRpc.ts","../node_modules/@ethereumjs/tx/src/index.ts","../node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/@ethereumjs/tx/src/types.ts","../node_modules/@ethereumjs/tx/src/util.ts","../node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/src/common.ts","../node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/src/eips/index.ts","../node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/src/enums.ts","../node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/src/hardforks/index.ts","../node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/src/index.ts","../node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/src/utils.ts","../node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@metamask/eth-sig-util/src/ethereumjs-abi-utils.ts","../node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@metamask/eth-sig-util/src/utils.ts","../node_modules/@metamask/eth-sig-util/node_modules/bn.js/lib/bn.js","../node_modules/@metamask/eth-sig-util/node_modules/tweetnacl/nacl-fast.js","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/chain/IChainInterface.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/chain/config.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/errors/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/wallet/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/adapter/IAdapter.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/loglevel.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/utils.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/common.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/eips/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/enums.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/hardforks/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/utils.ts","../node_modules/crc-32/crc32.js","../node_modules/ethjs-util/lib/index.js","../node_modules/jsonschema/lib/attribute.js","../node_modules/jsonschema/lib/helpers.js","../node_modules/jsonschema/lib/index.js","../node_modules/jsonschema/lib/scan.js","../node_modules/jsonschema/lib/validator.js","../node_modules/tweetnacl-util/nacl-util.js"],"sourcesContent":["import { Chain, Common, Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  MAX_INTEGER,\n  MAX_UINT64,\n  SECP256K1_ORDER_DIV_2,\n  bufferToBigInt,\n  bufferToHex,\n  ecsign,\n  publicToAddress,\n  toBuffer,\n  unpadBuffer,\n} from '@ethereumjs/util'\n\nimport { Capability } from './types'\nimport { checkMaxInitCodeSize } from './util'\n\nimport type {\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  TxData,\n  TxOptions,\n  TxValuesArray,\n} from './types'\nimport type { BigIntLike } from '@ethereumjs/util'\n\ninterface TransactionCache {\n  hash: Buffer | undefined\n  dataFee?: {\n    value: bigint\n    hardfork: string | Hardfork\n  }\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n  private readonly _type: number\n\n  public readonly nonce: bigint\n  public readonly gasLimit: bigint\n  public readonly to?: Address\n  public readonly value: bigint\n  public readonly data: Buffer\n\n  public readonly v?: bigint\n  public readonly r?: bigint\n  public readonly s?: bigint\n\n  public readonly common!: Common\n\n  protected cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n  }\n\n  protected readonly txOptions: TxOptions\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Merge\n\n  constructor(txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData, opts: TxOptions) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = Number(bufferToBigInt(toBuffer(type)))\n\n    this.txOptions = opts\n\n    const toB = toBuffer(to === '' ? '0x' : to)\n    const vB = toBuffer(v === '' ? '0x' : v)\n    const rB = toBuffer(r === '' ? '0x' : r)\n    const sB = toBuffer(s === '' ? '0x' : s)\n\n    this.nonce = bufferToBigInt(toBuffer(nonce === '' ? '0x' : nonce))\n    this.gasLimit = bufferToBigInt(toBuffer(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = bufferToBigInt(toBuffer(value === '' ? '0x' : value))\n    this.data = toBuffer(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? bufferToBigInt(vB) : undefined\n    this.r = rB.length > 0 ? bufferToBigInt(rB) : undefined\n    this.s = sB.length > 0 ? bufferToBigInt(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n\n    const createContract = this.to === undefined || this.to === null\n    const allowUnlimitedInitCodeSize = opts.allowUnlimitedInitCodeSize ?? false\n    const common = opts.common ?? this._getCommon()\n    if (createContract && common.isActivatedEIP(3860) && allowUnlimitedInitCodeSize === false) {\n      checkMaxInitCodeSize(common, this.data.length)\n    }\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Checks if the transaction has the minimum amount of gas required\n   * (DataFee + TxFee + Creation Fee).\n   */\n  validate(): boolean\n  validate(stringError: false): boolean\n  validate(stringError: true): string[]\n  validate(stringError: boolean = false): boolean | string[] {\n    const errors = []\n\n    if (this.getBaseFee() > this.gasLimit) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    return stringError ? errors : errors.length === 0\n  }\n\n  protected _validateYParity() {\n    const { v } = this\n    if (v !== undefined && v !== BigInt(0) && v !== BigInt(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.\n   * Reasoning: https://ethereum.stackexchange.com/a/55728\n   */\n  protected _validateHighS() {\n    const { s } = this\n    if (this.common.gteHardfork('homestead') && s !== undefined && s > SECP256K1_ORDER_DIV_2) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): bigint {\n    const txFee = this.common.param('gasPrices', 'tx')\n    let fee = this.getDataFee()\n    if (txFee) fee += txFee\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      const txCreationFee = this.common.param('gasPrices', 'txCreation')\n      if (txCreationFee) fee += txCreationFee\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost = BigInt(0)\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = BigInt(Math.ceil(this.data.length / 32))\n      const initCodeCost = this.common.param('gasPrices', 'initCodeWordCost') * dataLength\n      cost += initCodeCost\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): bigint\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.buf.length === 0\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray | AccessListEIP2930ValuesArray | FeeMarketEIP1559ValuesArray\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Buffer\n\n  // Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n  //\n  // Note: do not use code docs here since VS Studio is then not able to detect the\n  // comments from the inherited methods\n  abstract getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  abstract getMessageToSign(hashMessage?: true): Buffer\n\n  abstract hash(): Buffer\n\n  abstract getMessageToVerifySignature(): Buffer\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (v === undefined || r === undefined || s === undefined) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBuffer(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Buffer\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Buffer): TransactionObject {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === 0 &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getMessageToSign(true)\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  abstract toJSON(): JsonTx\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n  protected abstract _processSignature(v: bigint, r: Buffer, s: Buffer): TransactionObject\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BigIntLike) {\n    // Chain ID provided\n    if (chainId !== undefined) {\n      const chainIdBigInt = bufferToBigInt(toBuffer(chainId))\n      if (common) {\n        if (common.chainId() !== chainIdBigInt) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBigInt)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBigInt, hardfork: this.DEFAULT_HARDFORK })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.custom(\n            {\n              name: 'custom-chain',\n              networkId: chainIdBigInt,\n              chainId: chainIdBigInt,\n            },\n            { baseChain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK }\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (\n        common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n      )\n    }\n  }\n\n  /**\n   * Validates that an object with BigInt values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BigInt values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: bigint | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_UINT64) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_UINT64) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  protected static _validateNotArray(values: { [key: string]: any }) {\n    const txDataKeys = [\n      'nonce',\n      'gasPrice',\n      'gasLimit',\n      'to',\n      'value',\n      'data',\n      'v',\n      'r',\n      's',\n      'type',\n      'baseFee',\n      'maxFeePerGas',\n      'chainId',\n    ]\n    for (const [key, value] of Object.entries(values)) {\n      if (txDataKeys.includes(key)) {\n        if (Array.isArray(value)) {\n          throw new Error(`${key} cannot be an array`)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bufferToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { AccessLists } from './util'\n\nimport type {\n  AccessList,\n  AccessListBuffer,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 2\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: bigint\n  public readonly maxFeePerGas: bigint\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'london'\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = arrToBufArr(RLP.decode(serialized.slice(1)))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: bufferToBigInt(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? bufferToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    if (this.common.isActivatedEIP(1559) === false) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = bufferToBigInt(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = bufferToBigInt(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    this._validateYParity()\n    this._validateHighS()\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    let cost = super.getDataFee()\n    cost += BigInt(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: bigint = BigInt(0)): bigint {\n    const prio = this.maxPriorityFeePerGas\n    const maxBase = this.maxFeePerGas - baseFee\n    const inclusionFeePerGas = prio < maxBase ? prio : maxBase\n    const gasPrice = inclusionFeePerGas + baseFee\n    return this.gasLimit * gasPrice + this.value\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): FeeMarketEIP1559ValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.chainId),\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.maxPriorityFeePerGas),\n      bigIntToUnpaddedBuffer(this.maxFeePerGas),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 9)\n    const message = Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n    if (hashMessage) {\n      return Buffer.from(keccak256(message))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(this.serialize()))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(this.serialize()))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v! + BigInt(27), // Recover the 27 which was stripped from ecsign\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BigInt(27), // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bigIntToHex(this.chainId),\n      nonce: bigIntToHex(this.nonce),\n      maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { AccessLists } from './util'\n\nimport type {\n  AccessList,\n  AccessListBuffer,\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 1\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'berlin'\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized.slice(1))))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: bufferToBigInt(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? bufferToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = bufferToBigInt(toBuffer(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n\n    this._validateYParity()\n    this._validateHighS()\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    let cost = super.getDataFee()\n    cost += BigInt(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): AccessListEIP2930ValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.chainId),\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 8)\n    const message = Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n    if (hashMessage) {\n      return Buffer.from(keccak256(message))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(this.serialize()))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(this.serialize()))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v! + BigInt(27), // Recover the 27 which was stripped from ecsign\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BigInt(27), // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bigIntToHex(this.chainId),\n      nonce: bigIntToHex(this.nonce),\n      gasPrice: bigIntToHex(this.gasPrice),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { TypeOutput, setLengthLeft, toBuffer, toType } from '@ethereumjs/util'\n\nimport type { TxData } from './types'\n\nexport const normalizeTxParams = (_txParams: any): TxData => {\n  const txParams = Object.assign({}, _txParams)\n\n  txParams.gasLimit = toType(txParams.gasLimit ?? txParams.gas, TypeOutput.BigInt)\n  txParams.data = txParams.data === undefined ? txParams.input : txParams.data\n\n  // check and convert gasPrice and value params\n  txParams.gasPrice = txParams.gasPrice !== undefined ? BigInt(txParams.gasPrice) : undefined\n  txParams.value = txParams.value !== undefined ? BigInt(txParams.value) : undefined\n\n  // strict byte length checking\n  txParams.to =\n    txParams.to !== null && txParams.to !== undefined\n      ? setLengthLeft(toBuffer(txParams.to), 20)\n      : null\n\n  // Normalize the v/r/s values. If RPC returns '0x0', ensure v/r/s are set to `undefined` in the tx.\n  // If this is not done, then the transaction creation will throw, because `v` is `0`.\n  // Note: this still means that `isSigned` will return `false`.\n  // v/r/s values are `0x0` on networks like Optimism, where the tx is a system tx.\n  // For instance: https://optimistic.etherscan.io/tx/0xf4304cb09b3f58a8e5d20fec5f393c96ccffe0269aaf632cb2be7a8a0f0c91cc\n\n  txParams.v = txParams.v === '0x0' ? '0x' : txParams.v\n  txParams.r = txParams.r === '0x0' ? '0x' : txParams.r\n  txParams.s = txParams.s === '0x0' ? '0x' : txParams.s\n\n  if (txParams.v !== '0x') {\n    txParams.v = toType(txParams.v, TypeOutput.BigInt)\n  }\n\n  return txParams\n}\n","export { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nexport { AccessListEIP2930Transaction } from './eip2930Transaction'\nexport { Transaction } from './legacyTransaction'\nexport { TransactionFactory } from './transactionFactory'\nexport * from './types'\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  unpadBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { Capability } from './types'\n\nimport type { JsonTx, TxData, TxOptions, TxValuesArray } from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 0\n\nfunction meetsEIP155(_v: bigint, chainId: bigint) {\n  const v = Number(_v)\n  const chainIdDoubled = Number(chainId) * 2\n  return v === chainIdDoubled + 35 || v === chainIdDoubled + 36\n}\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport class Transaction extends BaseTransaction<Transaction> {\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized))) as Buffer[]\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new Transaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = bufferToBigInt(toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        // v and chain ID meet EIP-155 conditions\n        if (meetsEIP155(this.v!, this.common.chainId())) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Buffer {\n    return Buffer.from(RLP.encode(bufArrToArr(this.raw())))\n  }\n\n  private _getMessageToSign() {\n    const values = [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      values.push(bigIntToUnpaddedBuffer(this.common.chainId()))\n      values.push(unpadBuffer(toBuffer(0)))\n      values.push(unpadBuffer(toBuffer(0)))\n    }\n\n    return values\n  }\n\n  /**\n   * Returns the unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { bufArrToArr } from '@ethereumjs/util'\n   * import { RLP } from '@ethereumjs/rlp'\n   * const message = tx.getMessageToSign(false)\n   * const serializedMessage = Buffer.from(RLP.encode(bufArrToArr(message))) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage: false): Buffer[]\n  getMessageToSign(hashMessage?: true): Buffer\n  getMessageToSign(hashMessage = true) {\n    const message = this._getMessageToSign()\n    if (hashMessage) {\n      return Buffer.from(keccak256(RLP.encode(bufArrToArr(message))))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: super.getDataFee(),\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return super.getDataFee()\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(RLP.encode(bufArrToArr(this.raw()))))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr(this.raw()))))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const message = this._getMessageToSign()\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr(message))))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Buffer {\n    const msgHash = this.getMessageToVerifySignature()\n\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v!,\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!),\n        this.supports(Capability.EIP155ReplayProtection) ? this.common.chainId() : undefined\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      v += this.common.chainId() * BigInt(2) + BigInt(8)\n    }\n\n    const opts = { ...this.txOptions, common: this.common }\n\n    return Transaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v,\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    return {\n      nonce: bigIntToHex(this.nonce),\n      gasPrice: bigIntToHex(this.gasPrice),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  private _validateTxV(_v?: bigint, common?: Common): Common {\n    let chainIdBigInt\n    const v = _v !== undefined ? Number(_v) : undefined\n    // Check for valid v values in the scope of a signed legacy tx\n    if (v !== undefined) {\n      // v is 1. not matching the EIP-155 chainId included case and...\n      // v is 2. not matching the classic v=27 or v=28 case\n      if (v < 37 && v !== 27 && v !== 28) {\n        throw new Error(\n          `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`\n        )\n      }\n    }\n\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      v !== 0 &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      v !== 27 &&\n      v !== 28\n    ) {\n      if (common) {\n        if (!meetsEIP155(BigInt(v), common.chainId())) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if ((v - 35) % 2 === 0) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBigInt = BigInt(v - numSub) / BigInt(2)\n      }\n    }\n    return this._getCommon(common, chainIdBigInt)\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { bufferToBigInt, fetchFromProvider, getProvider, toBuffer } from '@ethereumjs/util'\n\nimport { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nimport { AccessListEIP2930Transaction } from './eip2930Transaction'\nimport { normalizeTxParams } from './fromRpc'\nimport { Transaction } from './legacyTransaction'\n\nimport type {\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559TxData,\n  TxData,\n  TxOptions,\n  TypedTransaction,\n} from './types'\n\nexport class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData,\n    txOptions: TxOptions = {}\n  ): TypedTransaction {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return Transaction.fromTxData(<TxData>txData, txOptions)\n    } else {\n      const txType = Number(bufferToBigInt(toBuffer(txData.type)))\n      if (txType === 0) {\n        return Transaction.fromTxData(<TxData>txData, txOptions)\n      } else if (txType === 1) {\n        return AccessListEIP2930Transaction.fromTxData(<AccessListEIP2930TxData>txData, txOptions)\n      } else if (txType === 2) {\n        return FeeMarketEIP1559Transaction.fromTxData(<FeeMarketEIP1559TxData>txData, txOptions)\n      } else {\n        throw new Error(`Tx instantiation with type ${txType} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Buffer\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData(data: Buffer, txOptions: TxOptions = {}): TypedTransaction {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      switch (data[0]) {\n        case 1:\n          return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions)\n        case 2:\n          return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions)\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n    } else {\n      return Transaction.fromSerializedTx(data, txOptions)\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Buffer[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Buffer or Buffer[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Buffer | Buffer[], txOptions: TxOptions = {}) {\n    if (Buffer.isBuffer(data)) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return Transaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   *  Method to retrieve a transaction from the provider\n   * @param provider - An Ethers JsonRPCProvider\n   * @param txHash - Transaction hash\n   * @param txOptions - The transaction options\n   * @returns the transaction specified by `txHash`\n   */\n  public static async fromEthersProvider(\n    provider: string | any,\n    txHash: string,\n    txOptions?: TxOptions\n  ) {\n    const prov = getProvider(provider)\n    const txData = await fetchFromProvider(prov, {\n      method: 'eth_getTransactionByHash',\n      params: [txHash],\n    })\n    if (txData === null) {\n      throw new Error('No data returned from provider')\n    }\n    return TransactionFactory.fromRPCTx(txData, txOptions)\n  }\n\n  /**\n   * Method to decode data retrieved from RPC, such as `eth_getTransactionByHash`\n   * Note that this normalizes some of the parameters\n   * @param txData The RPC-encoded data\n   * @param txOptions The transaction options\n   * @returns\n   */\n  public static async fromRPCTx(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData,\n    txOptions: TxOptions = {}\n  ) {\n    return TransactionFactory.fromTxData(normalizeTxParams(txData), txOptions)\n  }\n}\n","import type { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nimport type { AccessListEIP2930Transaction } from './eip2930Transaction'\nimport type { Transaction } from './legacyTransaction'\nimport type { Common } from '@ethereumjs/common'\nimport type { AddressLike, BigIntLike, BufferLike, PrefixedHexString } from '@ethereumjs/util'\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechanism\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add additional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n\n  /**\n   * Allows unlimited contract code-size init while debugging. This (partially) disables EIP-3860.\n   * Gas cost for initcode size analysis will still be charged. Use with caution.\n   */\n  allowUnlimitedInitCodeSize?: boolean\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n  address: PrefixedHexString\n  storageKeys: PrefixedHexString[]\n}\n\n/*\n * An Access List as a tuple of [address: Buffer, storageKeys: Buffer[]]\n */\nexport type AccessListBufferItem = [Buffer, Buffer[]]\nexport type AccessListBuffer = AccessListBufferItem[]\nexport type AccessList = AccessListItem[]\n\nexport function isAccessListBuffer(\n  input: AccessListBuffer | AccessList\n): input is AccessListBuffer {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBuffer | AccessList): input is AccessList {\n  return !isAccessListBuffer(input) // This is exactly the same method, except the output is negated.\n}\n\n/**\n * Encompassing type for all transaction types.\n *\n * Note that this also includes legacy txs which are\n * referenced as {@link Transaction} for compatibility reasons.\n */\nexport type TypedTransaction =\n  | Transaction\n  | AccessListEIP2930Transaction\n  | FeeMarketEIP1559Transaction\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BigIntLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BigIntLike | null\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BigIntLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BigIntLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BufferLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BigIntLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BigIntLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BigIntLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBuffer | AccessList | null\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never | null\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BigIntLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BigIntLike\n}\n\n/**\n * Buffer values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Buffer[]\n\n/**\n * Buffer values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\n/**\n * Buffer values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n  maxFeePerDataGas?: string\n  versionedHashes?: string[]\n}\n\n/*\n * Based on https://ethereum.org/en/developers/docs/apis/json-rpc/\n */\nexport interface JsonRpcTx {\n  blockHash: string | null // DATA, 32 Bytes - hash of the block where this transaction was in. null when it's pending.\n  blockNumber: string | null // QUANTITY - block number where this transaction was in. null when it's pending.\n  from: string // DATA, 20 Bytes - address of the sender.\n  gas: string // QUANTITY - gas provided by the sender.\n  gasPrice: string // QUANTITY - gas price provided by the sender in wei. If EIP-1559 tx, defaults to maxFeePerGas.\n  maxFeePerGas?: string // QUANTITY - max total fee per gas provided by the sender in wei.\n  maxPriorityFeePerGas?: string // QUANTITY - max priority fee per gas provided by the sender in wei.\n  type: string // QUANTITY - EIP-2718 Typed Transaction type\n  accessList?: JsonTx['accessList'] // EIP-2930 access list\n  chainId?: string // Chain ID that this transaction is valid on.\n  hash: string // DATA, 32 Bytes - hash of the transaction.\n  input: string // DATA - the data send along with the transaction.\n  nonce: string // QUANTITY - the number of transactions made by the sender prior to this one.\n  to: string | null /// DATA, 20 Bytes - address of the receiver. null when it's a contract creation transaction.\n  transactionIndex: string | null // QUANTITY - integer of the transactions index position in the block. null when it's pending.\n  value: string // QUANTITY - value transferred in Wei.\n  v: string // QUANTITY - ECDSA recovery id\n  r: string // DATA, 32 Bytes - ECDSA signature r\n  s: string // DATA, 32 Bytes - ECDSA signature s\n  maxFeePerDataGas?: string // QUANTITY - max data fee for blob transactions\n  versionedHashes?: string[] // DATA - array of 32 byte versioned hashes for blob transactions\n}\n","import { bufferToHex, setLengthLeft, toBuffer } from '@ethereumjs/util'\n\nimport { isAccessList } from './types'\n\nimport type { AccessList, AccessListBuffer, AccessListItem } from './types'\nimport type { Common } from '@ethereumjs/common'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  const maxInitCodeSize = common.param('vm', 'maxInitCodeSize')\n  if (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBuffer | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBuffer = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBuffer = toBuffer(item.address)\n        const storageItems: Buffer[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(toBuffer(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBuffer, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bufferToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bufferToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBuffer) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = <Buffer>accessListItem[0]\n      const storageSlots = <Buffer[]>accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length !== 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length !== 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBuffer) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: '0x' + setLengthLeft(<Buffer>item[0], 20).toString('hex'),\n        storageKeys: [],\n      }\n      const storageSlots: Buffer[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push('0x' + setLengthLeft(storageSlot, 32).toString('hex'))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBuffer, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost)\n  }\n}\n","import { TypeOutput, intToBuffer, toType } from '@ethereumjs/util'\nimport { buf as crc32Buffer } from 'crc-32'\nimport { EventEmitter } from 'events'\n\nimport * as goerli from './chains/goerli.json'\nimport * as mainnet from './chains/mainnet.json'\nimport * as rinkeby from './chains/rinkeby.json'\nimport * as ropsten from './chains/ropsten.json'\nimport * as sepolia from './chains/sepolia.json'\nimport { EIPs } from './eips'\nimport { Chain, CustomChain, Hardfork } from './enums'\nimport { hardforks as HARDFORK_SPECS } from './hardforks'\nimport { parseGethGenesis } from './utils'\n\nimport type { ConsensusAlgorithm, ConsensusType } from './enums'\nimport type {\n  BootstrapNodeConfig,\n  CasperConfig,\n  ChainConfig,\n  ChainName,\n  ChainsConfig,\n  CliqueConfig,\n  CommonOpts,\n  CustomCommonOpts,\n  EthashConfig,\n  GenesisBlockConfig,\n  GethConfigOpts,\n  HardforkConfig,\n} from './types'\nimport type { BigIntLike } from '@ethereumjs/util'\n\ntype HardforkSpecKeys = keyof typeof HARDFORK_SPECS\ntype HardforkSpecValues = typeof HARDFORK_SPECS[HardforkSpecKeys]\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport class Common extends EventEmitter {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  private _chainParams: ChainConfig\n  private _hardfork: string | Hardfork\n  private _eips: number[] = []\n  private _customChains: ChainConfig[]\n\n  private HARDFORK_CHANGES: [HardforkSpecKeys, HardforkSpecValues][]\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<ChainConfig> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumRinkebyTestnet,\n            chainId: 421611,\n            networkId: 421611,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumOne) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumOne,\n            chainId: 42161,\n            networkId: 42161,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Static method to load and set common from a geth genesis json\n   * @param genesisJson json of geth configuration\n   * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n   * @returns Common\n   */\n  static fromGethGenesis(\n    genesisJson: any,\n    { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge }: GethConfigOpts\n  ): Common {\n    const genesisParams = parseGethGenesis(genesisJson, chain, mergeForkIdPostMerge)\n    const common = new Common({\n      chain: genesisParams.name ?? 'custom',\n      customChains: [genesisParams],\n      eips,\n      hardfork: hardfork ?? genesisParams.hardfork,\n    })\n    if (genesisHash !== undefined) {\n      common.setForkHashes(genesisHash)\n    }\n    return common\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId bigint id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: bigint): boolean {\n    const initializedChains = this._getInitializedChains()\n    return Boolean((initializedChains['names'] as ChainName)[chainId.toString()])\n  }\n\n  private static _getChainParams(\n    chain: string | number | Chain | bigint,\n    customChains?: ChainConfig[]\n  ): ChainConfig {\n    const initializedChains = this._getInitializedChains(customChains)\n    if (typeof chain === 'number' || typeof chain === 'bigint') {\n      chain = chain.toString()\n\n      if ((initializedChains['names'] as ChainName)[chain]) {\n        const name: string = (initializedChains['names'] as ChainName)[chain]\n        return initializedChains[name] as ChainConfig\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain] !== undefined) {\n      return initializedChains[chain] as ChainConfig\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  constructor(opts: CommonOpts) {\n    super()\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Merge\n    // Assign hardfork changes in the sequence of the applied hardforks\n    this.HARDFORK_CHANGES = this.hardforks().map((hf) => [\n      hf.name as HardforkSpecKeys,\n      HARDFORK_SPECS[hf.name as HardforkSpecKeys],\n    ])\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.hardfork !== undefined) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain representation.\n   *              Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | bigint | object): ChainConfig {\n    if (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain, this._customChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or bigint when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if (!(param in chain)) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as ChainConfig\n    } else {\n      throw new Error('Wrong input format')\n    }\n    for (const hf of this.hardforks()) {\n      if (hf.block === undefined) {\n        throw new Error(`Hardfork cannot have undefined block number`)\n      }\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    let existing = false\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td : total difficulty of the parent block (for block hf) OR of the chain latest (for chain hf)\n   * @param timestamp: timestamp in seconds at which block was/is to be minted\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): string {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    td = toType(td, TypeOutput.BigInt)\n    timestamp = toType(timestamp, TypeOutput.Number)\n\n    // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n    const hfs = this.hardforks().filter(\n      (hf) =>\n        hf.block !== null || (hf.ttd !== null && hf.ttd !== undefined) || hf.timestamp !== undefined\n    )\n    const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    const doubleTTDHF = hfs\n      .slice(mergeIndex + 1)\n      .findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    if (doubleTTDHF >= 0) {\n      throw Error(`More than one merge hardforks found with ttd specified`)\n    }\n\n    // Find the first hardfork that has a block number greater than `blockNumber`\n    // (skips the merge hardfork since it cannot have a block number specified).\n    // If timestamp is not provided, it also skips timestamps hardforks to continue\n    // discovering/checking number hardforks.\n    let hfIndex = hfs.findIndex(\n      (hf) =>\n        (hf.block !== null && hf.block > blockNumber) ||\n        (timestamp !== undefined && Number(hf.timestamp) > timestamp)\n    )\n\n    if (hfIndex === -1) {\n      // all hardforks apply, set hfIndex to the last one as that's the candidate\n      hfIndex = hfs.length\n    } else if (hfIndex === 0) {\n      // cannot have a case where a block number is before all applied hardforks\n      // since the chain has to start with a hardfork\n      throw Error('Must have at least one hardfork at block 0')\n    }\n\n    // If timestamp is not provided, we need to rollback to the last hf with block or ttd\n    if (timestamp === undefined) {\n      const stepBack = hfs\n        .slice(0, hfIndex)\n        .reverse()\n        .findIndex((hf) => hf.block !== null || hf.ttd !== undefined)\n      hfIndex = hfIndex - stepBack\n    }\n    // Move hfIndex one back to arrive at candidate hardfork\n    hfIndex = hfIndex - 1\n\n    // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n    // hardforks. so it will now be needed to rollback\n    if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n      // We're on the merge hardfork.  Let's check the TTD\n      if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd!) > td) {\n        // Merge ttd greater than current td so we're on hardfork before merge\n        hfIndex -= 1\n      }\n    } else {\n      if (mergeIndex >= 0 && td !== undefined && td !== null) {\n        if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd!) > td) {\n          throw Error('Maximum HF determined by total difficulty is lower than the block number HF')\n        } else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd!) <= td) {\n          throw Error('HF determined by block number is lower than the minimum total difficulty HF')\n        }\n      }\n    }\n\n    const hfStartIndex = hfIndex\n    // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n    // This won't anyway be the case with Merge hfs\n    for (; hfIndex < hfs.length - 1; hfIndex++) {\n      // break out if hfIndex + 1 is not scheduled at hfIndex\n      if (\n        hfs[hfIndex].block !== hfs[hfIndex + 1].block ||\n        hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp\n      ) {\n        break\n      }\n    }\n\n    if (timestamp) {\n      const minTimeStamp = hfs\n        .slice(0, hfStartIndex)\n        .reduce((acc: number, hf: HardforkConfig) => Math.max(Number(hf.timestamp ?? '0'), acc), 0)\n      if (minTimeStamp > timestamp) {\n        throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`)\n      }\n\n      const maxTimeStamp = hfs\n        .slice(hfIndex + 1)\n        .reduce(\n          (acc: number, hf: HardforkConfig) => Math.min(Number(hf.timestamp ?? timestamp), acc),\n          timestamp\n        )\n      if (maxTimeStamp < timestamp) {\n        throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`)\n      }\n    }\n    const hardfork = hfs[hfIndex]\n    return hardfork.name\n  }\n\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @param timestamp\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): string {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params or null if hardfork not on chain\n   */\n  _getHardfork(hardfork: string | Hardfork): HardforkConfig | null {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    return null\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n      if (EIPs[eip].requiredEIPs !== undefined) {\n        for (const elem of EIPs[eip].requiredEIPs) {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        }\n      }\n    }\n    this._eips = eips\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precedence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  param(topic: string, name: string): bigint {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip)\n      if (value !== undefined) return value\n    }\n    return this.paramByHardfork(topic, name, this._hardfork)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): bigint {\n    let value = null\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = typeof valueEIP === 'bigint' ? valueEIP : value\n        }\n        // Parameter-inlining HF file (e.g. istanbul.json)\n      } else {\n        if (hfChanges[1][topic] === undefined) {\n          throw new Error(`Topic ${topic} not defined`)\n        }\n        if (hfChanges[1][topic][name] !== undefined) {\n          value = hfChanges[1][topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return BigInt(value ?? 0)\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `undefined` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): bigint | undefined {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = EIPs[eip]\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`)\n    }\n    if (eipParams[topic][name] === undefined) {\n      return undefined\n    }\n    const value = eipParams[topic][name].v\n    return BigInt(value)\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number or\n   * optional provided total difficulty (Merge HF)\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   * @param td Total difficulty\n   *    * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByBlock(\n    topic: string,\n    name: string,\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): bigint {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp)\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this.eips().includes(eip)) {\n      return true\n    }\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        if ((hf['eips'] as number[]).includes(eip)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(hardfork: string | Hardfork | null, blockNumber: BigIntLike): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const hfBlock = this.hardforkBlock(hardfork)\n    if (typeof hfBlock === 'bigint' && hfBlock !== BigInt(0) && blockNumber >= hfBlock) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BigIntLike): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(hardfork1: string | Hardfork | null, hardfork2: string | Hardfork): boolean {\n    hardfork1 = hardfork1 ?? this._hardfork\n    const hardforks = this.hardforks()\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork): boolean {\n    return this.hardforkGteHardfork(null, hardfork)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const block = this._getHardfork(hardfork)?.['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return BigInt(block)\n  }\n\n  hardforkTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const timestamp = this._getHardfork(hardfork)?.['timestamp']\n    if (timestamp === undefined || timestamp === null) {\n      return null\n    }\n    return BigInt(timestamp)\n  }\n\n  /**\n   * Returns the hardfork change block for eip\n   * @param eip EIP number\n   * @returns Block number or null if unscheduled\n   */\n  eipBlock(eip: number): bigint | null {\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if ('eips' in hf) {\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (hf['eips'].includes(eip)) {\n          return this.hardforkBlock(hfChanges[0])\n        }\n      }\n    }\n    return null\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTTD(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const ttd = this._getHardfork(hardfork)?.['ttd']\n    if (ttd === undefined || ttd === null) {\n      return null\n    }\n    return BigInt(ttd)\n  }\n\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isHardforkBlock(blockNumber: BigIntLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const block = this.hardforkBlock(hardfork)\n    return typeof block === 'bigint' && block !== BigInt(0) ? block === blockNumber : false\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block timestamp, number or null if not available\n   */\n  nextHardforkBlockOrTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const hfs = this.hardforks()\n    let hfIndex = hfs.findIndex((hf) => hf.name === hardfork)\n    // If the current hardfork is merge, go one behind as merge hf is not part of these\n    // calcs even if the merge hf block is set\n    if (hardfork === Hardfork.Merge) {\n      hfIndex -= 1\n    }\n    // Hardfork not found\n    if (hfIndex < 0) {\n      return null\n    }\n\n    let currHfTimeOrBlock = hfs[hfIndex].timestamp ?? hfs[hfIndex].block\n    currHfTimeOrBlock =\n      currHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined\n        ? Number(currHfTimeOrBlock)\n        : null\n\n    const nextHf = hfs.slice(hfIndex + 1).find((hf) => {\n      let hfTimeOrBlock = hf.timestamp ?? hf.block\n      hfTimeOrBlock =\n        hfTimeOrBlock !== null && hfTimeOrBlock !== undefined ? Number(hfTimeOrBlock) : null\n      return (\n        hf.name !== Hardfork.Merge &&\n        hfTimeOrBlock !== null &&\n        hfTimeOrBlock !== undefined &&\n        hfTimeOrBlock !== currHfTimeOrBlock\n      )\n    })\n    // If no next hf found with valid block or timestamp return null\n    if (nextHf === undefined) {\n      return null\n    }\n\n    const nextHfBlock = nextHf.timestamp ?? nextHf.block\n    if (nextHfBlock === null || nextHfBlock === undefined) {\n      return null\n    }\n\n    return BigInt(nextHfBlock)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated\n   */\n  nextHardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    let hfBlock = this.hardforkBlock(hardfork)\n    // If this is a merge hardfork with block not set, then we fallback to previous hardfork\n    // to find the nextHardforkBlock\n    if (hfBlock === null && hardfork === Hardfork.Merge) {\n      const hfs = this.hardforks()\n      const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n      if (mergeIndex < 0) {\n        throw Error(`Merge hardfork should have been found`)\n      }\n      hfBlock = this.hardforkBlock(hfs[mergeIndex - 1].name)\n    }\n    if (hfBlock === null) {\n      return null\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    const nextHfBlock = this.hardforks().reduce((acc: bigint | null, hf: HardforkConfig) => {\n      // We need to ignore the merge block in our next hardfork calc\n      const block = BigInt(\n        hf.block === null || (hf.ttd !== undefined && hf.ttd !== null) ? 0 : hf.block\n      )\n      // Typescript can't seem to follow that the hfBlock is not null at this point\n      return block > hfBlock! && acc === null ? block : acc\n    }, null)\n    return nextHfBlock\n  }\n\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isNextHardforkBlock(blockNumber: BigIntLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const nextHardforkBlock = this.nextHardforkBlock(hardfork)\n\n    return nextHardforkBlock === null ? false : nextHardforkBlock === blockNumber\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @param genesisHash Genesis block hash of the chain\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork: string | Hardfork, genesisHash: Buffer) {\n    let hfBuffer = Buffer.alloc(0)\n    let prevBlockOrTime = 0\n    for (const hf of this.hardforks()) {\n      const { block, timestamp, name } = hf\n      // Timestamp to be used for timestamp based hfs even if we may bundle\n      // block number with them retrospectively\n      let blockOrTime = timestamp ?? block\n      blockOrTime = blockOrTime !== null ? Number(blockOrTime) : null\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same blockOrTime HFs\n      // and on the merge since forkhash doesn't change on merge hf\n      if (\n        typeof blockOrTime === 'number' &&\n        blockOrTime !== 0 &&\n        blockOrTime !== prevBlockOrTime &&\n        name !== Hardfork.Merge\n      ) {\n        const hfBlockBuffer = Buffer.from(blockOrTime.toString(16).padStart(16, '0'), 'hex')\n        hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer])\n        prevBlockOrTime = blockOrTime\n      }\n\n      if (hf.name === hardfork) break\n    }\n    const inputBuffer = Buffer.concat([genesisHash, hfBuffer])\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = intToBuffer(crc32Buffer(inputBuffer) >>> 0).toString('hex')\n    return `0x${forkhash}`\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n   */\n  forkHash(hardfork?: string | Hardfork, genesisHash?: Buffer): string {\n    hardfork = hardfork ?? this._hardfork\n    const data = this._getHardfork(hardfork)\n    if (\n      data === null ||\n      (data?.block === null && data?.timestamp === undefined && data?.ttd === undefined)\n    ) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data?.forkHash !== null && data?.forkHash !== undefined) {\n      return data.forkHash\n    }\n    if (!genesisHash) throw new Error('genesisHash required for forkHash calculation')\n    return this._calcForkHash(hardfork, genesisHash)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): HardforkConfig | null {\n    const resArray = this.hardforks().filter((hf: HardforkConfig) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Sets any missing forkHashes on the passed-in {@link Common} instance\n   * @param common The {@link Common} to set the forkHashes for\n   * @param genesisHash The genesis block hash\n   */\n  setForkHashes(genesisHash: Buffer) {\n    for (const hf of this.hardforks()) {\n      const blockOrTime = hf.timestamp ?? hf.block\n      if (\n        (hf.forkHash === null || hf.forkHash === undefined) &&\n        ((blockOrTime !== null && blockOrTime !== undefined) || typeof hf.ttd !== 'undefined')\n      ) {\n        hf.forkHash = this.forkHash(hf.name, genesisHash)\n      }\n    }\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlockConfig {\n    return this._chainParams.genesis\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkConfig[] {\n    return this._chainParams.hardforks\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNodeConfig[] {\n    return this._chainParams.bootstrapNodes\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams.dnsNetworks!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainId(): bigint {\n    return BigInt(this._chainParams.chainId)\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams.name\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkId(): bigint {\n    return BigInt(this._chainParams.networkId)\n  }\n\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? this._chainParams['consensus']['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? (this._chainParams['consensus']['algorithm'] as ConsensusAlgorithm)\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: empty object\n   * clique: period, epoch\n   * casper: empty object\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusConfig(): { [key: string]: CliqueConfig | EthashConfig | CasperConfig } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return (\n      value ?? this._chainParams['consensus'][this.consensusAlgorithm() as ConsensusAlgorithm] ?? {}\n    )\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.removeAllListeners()\n    return copy\n  }\n\n  static _getInitializedChains(customChains?: ChainConfig[]): ChainsConfig {\n    const names: ChainName = {}\n    for (const [name, id] of Object.entries(Chain)) {\n      names[id] = name.toLowerCase()\n    }\n    const chains = { mainnet, ropsten, rinkeby, goerli, sepolia } as ChainsConfig\n    if (customChains) {\n      for (const chain of customChains) {\n        const { name } = chain\n        names[chain.chainId.toString()] = name\n        chains[name] = chain\n      }\n    }\n    chains.names = names\n    return chains\n  }\n}\n","export const EIPs: { [key: number]: any } = {\n  1153: require('./1153.json'),\n  1559: require('./1559.json'),\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2565: require('./2565.json'),\n  2718: require('./2718.json'),\n  2929: require('./2929.json'),\n  2930: require('./2930.json'),\n  3074: require('./3074.json'),\n  3198: require('./3198.json'),\n  3529: require('./3529.json'),\n  3540: require('./3540.json'),\n  3541: require('./3541.json'),\n  3554: require('./3554.json'),\n  3607: require('./3607.json'),\n  3651: require('./3651.json'),\n  3670: require('./3670.json'),\n  3675: require('./3675.json'),\n  3855: require('./3855.json'),\n  3860: require('./3860.json'),\n  4345: require('./4345.json'),\n  4399: require('./4399.json'),\n  4844: require('./4844.json'),\n  4895: require('./4895.json'),\n  5133: require('./5133.json'),\n}\n","export enum Chain {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Goerli = 5,\n  Sepolia = 11155111,\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  GrayGlacier = 'grayGlacier',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Merge = 'merge',\n  Shanghai = 'shanghai',\n  ShardingForkDev = 'shardingFork',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  ArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n  /**\n   * Arbitrum One - mainnet for Arbitrum roll-up\n   *\n   * - [Documentation](https://developer.offchainlabs.com/public-chains)\n   */\n  ArbitrumOne = 'arbitrum-one',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n","export const hardforks = {\n  chainstart: require('./chainstart.json'),\n  homestead: require('./homestead.json'),\n  dao: require('./dao.json'),\n  tangerineWhistle: require('./tangerineWhistle.json'),\n  spuriousDragon: require('./spuriousDragon.json'),\n  byzantium: require('./byzantium.json'),\n  constantinople: require('./constantinople.json'),\n  petersburg: require('./petersburg.json'),\n  istanbul: require('./istanbul.json'),\n  muirGlacier: require('./muirGlacier.json'),\n  berlin: require('./berlin.json'),\n  london: require('./london.json'),\n  shanghai: require('./shanghai.json'),\n  arrowGlacier: require('./arrowGlacier.json'),\n  grayGlacier: require('./grayGlacier.json'),\n  mergeForkIdTransition: require('./mergeForkIdTransition.json'),\n  merge: require('./merge.json'),\n  shardingFork: require('./sharding.json'),\n}\n","export * from './common'\nexport * from './enums'\nexport * from './types'\nexport * from './utils'\n","import { intToHex, isHexPrefixed, stripHexPrefix } from '@ethereumjs/util'\n\nimport { Hardfork } from './enums'\n\ntype ConfigHardfork =\n  | { name: string; block: null; timestamp: number }\n  | { name: string; block: number; timestamp?: number }\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */\nfunction formatNonce(nonce: string): string {\n  if (!nonce || nonce === '0x0') {\n    return '0x0000000000000000'\n  }\n  if (isHexPrefixed(nonce)) {\n    return '0x' + stripHexPrefix(nonce).padStart(16, '0')\n  }\n  return '0x' + nonce.padStart(16, '0')\n}\n\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */\nfunction parseGethParams(json: any, mergeForkIdPostMerge: boolean = true) {\n  const {\n    name,\n    config,\n    difficulty,\n    mixHash,\n    gasLimit,\n    coinbase,\n    baseFeePerGas,\n  }: {\n    name: string\n    config: any\n    difficulty: string\n    mixHash: string\n    gasLimit: string\n    coinbase: string\n    baseFeePerGas: string\n  } = json\n  let { extraData, timestamp, nonce }: { extraData: string; timestamp: string; nonce: string } =\n    json\n  const genesisTimestamp = Number(timestamp)\n  const { chainId }: { chainId: number } = config\n\n  // geth is not strictly putting empty fields with a 0x prefix\n  if (extraData === '') {\n    extraData = '0x'\n  }\n  // geth may use number for timestamp\n  if (!isHexPrefixed(timestamp)) {\n    timestamp = intToHex(parseInt(timestamp))\n  }\n  // geth may not give us a nonce strictly formatted to an 8 byte hex string\n  if (nonce.length !== 18) {\n    nonce = formatNonce(nonce)\n  }\n\n  // EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n  // but have different configuration parameters in geth genesis parameters\n  if (config.eip155Block !== config.eip158Block) {\n    throw new Error(\n      'EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork'\n    )\n  }\n\n  const params = {\n    name,\n    chainId,\n    networkId: chainId,\n    genesis: {\n      timestamp,\n      gasLimit: parseInt(gasLimit), // geth gasLimit and difficulty are hex strings while ours are `number`s\n      difficulty: parseInt(difficulty),\n      nonce,\n      extraData,\n      mixHash,\n      coinbase,\n      baseFeePerGas,\n    },\n    hardfork: undefined as string | undefined,\n    hardforks: [] as ConfigHardfork[],\n    bootstrapNodes: [],\n    consensus:\n      config.clique !== undefined\n        ? {\n            type: 'poa',\n            algorithm: 'clique',\n            clique: {\n              // The recent geth genesis seems to be using blockperiodseconds\n              // and epochlength for clique specification\n              // see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n              period: config.clique.period ?? config.clique.blockperiodseconds,\n              epoch: config.clique.epoch ?? config.clique.epochlength,\n            },\n          }\n        : {\n            type: 'pow',\n            algorithm: 'ethash',\n            ethash: {},\n          },\n  }\n\n  const forkMap: { [key: string]: { name: string; postMerge?: boolean; isTimestamp?: boolean } } = {\n    [Hardfork.Homestead]: { name: 'homesteadBlock' },\n    [Hardfork.Dao]: { name: 'daoForkBlock' },\n    [Hardfork.TangerineWhistle]: { name: 'eip150Block' },\n    [Hardfork.SpuriousDragon]: { name: 'eip155Block' },\n    [Hardfork.Byzantium]: { name: 'byzantiumBlock' },\n    [Hardfork.Constantinople]: { name: 'constantinopleBlock' },\n    [Hardfork.Petersburg]: { name: 'petersburgBlock' },\n    [Hardfork.Istanbul]: { name: 'istanbulBlock' },\n    [Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },\n    [Hardfork.Berlin]: { name: 'berlinBlock' },\n    [Hardfork.London]: { name: 'londonBlock' },\n    [Hardfork.MergeForkIdTransition]: { name: 'mergeForkBlock', postMerge: mergeForkIdPostMerge },\n    [Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },\n    [Hardfork.ShardingForkDev]: { name: 'shardingForkTime', postMerge: true, isTimestamp: true },\n  }\n\n  // forkMapRev is the map from config field name to Hardfork\n  const forkMapRev = Object.keys(forkMap).reduce((acc, elem) => {\n    acc[forkMap[elem].name] = elem\n    return acc\n  }, {} as { [key: string]: string })\n  const configHardforkNames = Object.keys(config).filter(\n    (key) => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null\n  )\n\n  params.hardforks = configHardforkNames\n    .map((nameBlock) => ({\n      name: forkMapRev[nameBlock],\n      block:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true || typeof config[nameBlock] !== 'number'\n          ? null\n          : config[nameBlock],\n      timestamp:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true && typeof config[nameBlock] === 'number'\n          ? config[nameBlock]\n          : undefined,\n    }))\n    .filter((fork) => fork.block !== null || fork.timestamp !== undefined) as ConfigHardfork[]\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.block ?? Infinity) - (b.block ?? Infinity)\n  })\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.timestamp ?? genesisTimestamp) - (b.timestamp ?? genesisTimestamp)\n  })\n\n  if (config.terminalTotalDifficulty !== undefined) {\n    // Following points need to be considered for placement of merge hf\n    // - Merge hardfork can't be placed at genesis\n    // - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n    // - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n    //   necessary for e.g. withdrawals\n    const mergeConfig = {\n      name: Hardfork.Merge,\n      ttd: config.terminalTotalDifficulty,\n      block: null,\n    }\n\n    // Merge hardfork has to be placed before first hardfork that is dependent on merge\n    const postMergeIndex = params.hardforks.findIndex(\n      (hf: any) => forkMap[hf.name]?.postMerge === true\n    )\n    if (postMergeIndex !== -1) {\n      params.hardforks.splice(postMergeIndex, 0, mergeConfig as unknown as ConfigHardfork)\n    } else {\n      params.hardforks.push(mergeConfig as unknown as ConfigHardfork)\n    }\n  }\n\n  const latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined\n  params.hardfork = latestHardfork?.name\n  params.hardforks.unshift({ name: Hardfork.Chainstart, block: 0 })\n\n  return params\n}\n\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */\nexport function parseGethGenesis(json: any, name?: string, mergeForkIdPostMerge?: boolean) {\n  try {\n    if (['config', 'difficulty', 'gasLimit', 'alloc'].some((field) => !(field in json))) {\n      throw new Error('Invalid format, expected geth genesis fields missing')\n    }\n    if (name !== undefined) {\n      json.name = name\n    }\n    return parseGethParams(json, mergeForkIdPostMerge)\n  } catch (e: any) {\n    throw new Error(`Error parsing parameters file: ${e.message}`)\n  }\n}\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport type EthEncryptedData = {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n};\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array: Uint8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && data && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const receiverPrivateKeyUint8Array = naclDecodeHex(privateKey);\n      const receiverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        receiverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        receiverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      try {\n        if (!decryptedMessage) {\n          throw new Error();\n        }\n        const output = naclUtil.encodeUTF8(decryptedMessage);\n        // TODO: This is probably extraneous but was kept to minimize changes during refactor\n        if (!output) {\n          throw new Error();\n        }\n        return output;\n      } catch (err) {\n        if (err && typeof err.message === 'string' && err.message.length) {\n          throw new Error(`Decryption failed: ${err.message as string}`);\n        }\n        throw new Error(`Decryption failed.`);\n      }\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = naclDecodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction naclDecodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","/* eslint jsdoc/require-description: 0 */\n/* eslint jsdoc/require-returns: 0 */\n/* eslint jsdoc/match-description: 0 */\n/* eslint jsdoc/require-param-description: 0 */\n\nimport {\n  ToBufferInputTypes,\n  toBuffer,\n  setLengthRight,\n  setLengthLeft,\n  isHexPrefixed,\n  zeros,\n} from '@ethereumjs/util';\nimport BN from 'bn.js';\nimport { stripHexPrefix } from 'ethjs-util';\n\nimport { normalize } from './utils';\n\n//\n// Methods borrowed and somewhat adapted from ethereumjs-abi@0.6.8:\n// https://npmfs.com/package/ethereumjs-abi/0.6.8/lib/index.js\n//\n\n/**\n * Packs non-standard encoded values packed according to their respective type in types in a buffer.\n *\n * @param types - Array of types of each value to encode.\n * @param values - Array of values to encode.\n * @returns A buffer containing the packed values.\n */\nexport function solidityPack(types: string[], values: any[]): Buffer {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values');\n  }\n\n  const ret: Buffer[] = [];\n\n  for (let i = 0; i < types.length; i++) {\n    const type = elementaryName(types[i]);\n    const value = values[i];\n    ret.push(solidityHexValue(type, value, null));\n  }\n\n  return Buffer.concat(ret);\n}\n\n/**\n * Checks if a value is an array (represented as a string).\n *\n * @param type - The value to check whether it is an array.\n * @returns A boolean indicating whether the passed value is an array.\n */\nfunction isArray(type: string): boolean {\n  return type.endsWith(']');\n}\n\n/**\n * Parse array type for packing solidity values.\n *\n * @param type - A string that may be an array to parse.\n * @returns A parsed value from the array.\n */\nfunction parseTypeArray(type: string): 'dynamic' | number | null {\n  const tmp = type.match(/(.*)\\[(.*?)\\]$/u);\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10);\n  }\n  return null;\n}\n\n/**\n * Parse N from type<N>.\n *\n * @param type - Value to parse.\n * @returns Parsed value.\n */\nfunction parseTypeN(type: string): number {\n  const match = /^\\D+(\\d+)$/u.exec(type);\n  if (match === null) {\n    throw new Error(`Invalid parseTypeN input \"${type}\".`);\n  }\n  return parseInt(match[1], 10);\n}\n\n/**\n * Parse a number for determining a solidity hexvalue.\n *\n * @param arg - Number to parse.\n * @returns Parsed value.\n */\nexport function parseNumber(arg: string | number | BN): BN {\n  const type = typeof arg;\n  if (type === 'string') {\n    if (isHexPrefixed(arg as string)) {\n      return new BN(stripHexPrefix(arg), 16);\n    }\n    return new BN(arg, 10);\n  } else if (type === 'number') {\n    return new BN(arg);\n  } else if (\n    (arg && Object.prototype.hasOwnProperty.call(arg, 'toArray')) ||\n    BN.isBN(arg)\n  ) {\n    return arg as BN;\n  }\n  throw new Error('Argument is not a number');\n}\n\n/**\n * Get solidity hex value from type, value and bitsize inputs for packing these values in a buffer.\n *\n * @param type - The type of the value to encode.\n * @param value - The value to encode.\n * @param bitsize - The bitsize of the value to encode.\n * @returns The encoded soldity hex value.\n */\nfunction solidityHexValue(\n  type: string,\n  value: ToBufferInputTypes,\n  bitsize: number | null,\n): Buffer {\n  // pass in bitsize = null if use default bitsize\n  if (isArray(type)) {\n    const subType = type.replace(/\\[.*?\\]/u, '');\n    if (!isArray(subType)) {\n      const arraySize = parseTypeArray(type);\n      if (\n        arraySize !== 'dynamic' &&\n        arraySize !== 0 &&\n        arraySize !== null &&\n        (value as any[]).length > arraySize\n      ) {\n        throw new Error(`Elements exceed array size: ${arraySize}`);\n      }\n    }\n    const arrayValues = (value as number[]).map((v) =>\n      solidityHexValue(subType, v, 256),\n    );\n    return Buffer.concat(arrayValues);\n  } else if (type === 'bytes') {\n    return value as Buffer;\n  } else if (type === 'string') {\n    return Buffer.from(value as string, 'utf8');\n  } else if (type === 'bool') {\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    bitsize = bitsize || 8;\n    const padding = Array(bitsize / 4).join('0');\n    return Buffer.from(value ? `${padding}1` : `${padding}0`, 'hex');\n  } else if (type === 'address') {\n    let bytesize = 20;\n    if (bitsize) {\n      bytesize = bitsize / 8;\n    }\n    return setLengthLeft(toBuffer(value), bytesize);\n  } else if (type.startsWith('bytes')) {\n    const size = parseTypeN(type);\n    if (size < 1 || size > 32) {\n      throw new Error(`Invalid bytes<N> width: ${size}`);\n    }\n\n    if (typeof value === 'number') {\n      value = normalize(value);\n    }\n    return setLengthRight(toBuffer(value), size);\n  } else if (type.startsWith('uint')) {\n    const size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid uint<N> width: ${size}`);\n    }\n\n    const num = parseNumber(value as number);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied uint exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    bitsize = bitsize || size;\n    return num.toArrayLike(Buffer, 'be', bitsize / 8);\n  } else if (type.startsWith('int')) {\n    const size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid int<N> width: ${size}`);\n    }\n\n    const num = parseNumber(value as number);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied int exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    bitsize = bitsize || size;\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8);\n  }\n  // FIXME: support all other types\n  throw new Error(`Unsupported or invalid type: ${JSON.stringify(type)}`);\n}\n\n/**\n * Gets the correct solidity type name.\n *\n * @param name - The type name for which we want the corresponding solidity type name.\n * @returns The solidity type name for the input value.\n */\nfunction elementaryName(name: string): string {\n  if (name.startsWith('int[')) {\n    return `int256${name.slice(3)}`;\n  } else if (name === 'int') {\n    return 'int256';\n  } else if (name.startsWith('uint[')) {\n    return `uint256${name.slice(4)}`;\n  } else if (name === 'uint') {\n    return 'uint256';\n  } else if (name.startsWith('fixed[')) {\n    return `fixed128x128${name.slice(5)}`;\n  } else if (name === 'fixed') {\n    return 'fixed128x128';\n  } else if (name.startsWith('ufixed[')) {\n    return `ufixed128x128${name.slice(6)}`;\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128';\n  }\n  return name;\n}\n\n/**\n * @param types\n * @param values\n */\nexport function rawEncode(\n  types: string[],\n  values: (BN | Buffer | string | number | string[] | number[])[],\n): Buffer {\n  const output: Buffer[] = [];\n  const data: Buffer[] = [];\n\n  let headLength = 0;\n\n  types.forEach((type) => {\n    if (isArray(type)) {\n      const size: number | 'dynamic' | null = parseTypeArray(type);\n      // eslint-disable-next-line no-negated-condition\n      if (size !== 'dynamic' && size !== null) {\n        headLength += 32 * size;\n      } else {\n        headLength += 32;\n      }\n    } else {\n      headLength += 32;\n    }\n  });\n\n  for (let i = 0; i < types.length; i++) {\n    const type = elementaryName(types[i]);\n    const value = values[i];\n    const cur = encodeSingle(type, value);\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength));\n      data.push(cur);\n      headLength += cur.length;\n    } else {\n      output.push(cur);\n    }\n  }\n\n  return Buffer.concat(output.concat(data));\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\n/**\n * @param type\n * @param arg\n */\nfunction encodeSingle(\n  type: string,\n  arg: BN | Buffer | string | number | string[] | number[],\n): Buffer {\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg as string));\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0);\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg as string, 'utf8'));\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof (arg as any).length === 'undefined') {\n      throw new Error('Not an array?');\n    }\n    const size = parseTypeArray(type);\n    if (\n      size !== 'dynamic' &&\n      size !== 0 &&\n      size !== null &&\n      (arg as any).length > size\n    ) {\n      throw new Error(`Elements exceed array size: ${size}`);\n    }\n    const ret: Buffer[] = [];\n    type = type.slice(0, type.lastIndexOf('['));\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg);\n    }\n\n    // TODO: if this is array, should do for-of\n    for (const i in arg as Record<string, any>) {\n      if (Object.prototype.hasOwnProperty.call(arg, i)) {\n        ret.push(encodeSingle(type, arg[i]));\n      }\n    }\n\n    if (size === 'dynamic') {\n      const length = encodeSingle('uint256', (arg as any).length);\n      ret.unshift(length);\n    }\n    return Buffer.concat(ret);\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg as Buffer);\n\n    let ret = Buffer.concat([encodeSingle('uint256', arg.length), arg]);\n\n    if (arg.length % 32 !== 0) {\n      ret = Buffer.concat([ret, zeros(32 - (arg.length % 32))]);\n    }\n\n    return ret;\n  } else if (type.startsWith('bytes')) {\n    const size = parseTypeN(type);\n    if (size < 1 || size > 32) {\n      throw new Error(`Invalid bytes<N> width: ${size}`);\n    }\n\n    // TODO: fix types here\n    const nArg = typeof arg === 'number' ? normalize(arg) : arg;\n    return setLengthRight(toBuffer(nArg as string), 32);\n  } else if (type.startsWith('uint')) {\n    const size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid uint<N> width: ${size}`);\n    }\n\n    const num = parseNumber(arg as string);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied uint exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    if (num.isNeg()) {\n      throw new Error('Supplied uint is negative');\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32);\n  } else if (type.startsWith('int')) {\n    const size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid int<N> width: ${size}`);\n    }\n\n    const num = parseNumber(arg as string);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied int exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32);\n  } else if (type.startsWith('ufixed')) {\n    const size = parseTypeNxM(type);\n\n    const num = parseNumber(arg as string);\n\n    if (num.isNeg()) {\n      throw new Error('Supplied ufixed is negative');\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))));\n  } else if (type.startsWith('fixed')) {\n    const size = parseTypeNxM(type);\n\n    return encodeSingle(\n      'int256',\n      parseNumber(arg as string).mul(new BN(2).pow(new BN(size[1]))),\n    );\n  }\n\n  throw new Error(`Unsupported or invalid type: ${JSON.stringify(type)}`);\n}\n\n// Is a type dynamic?\n/**\n * @param type\n */\nfunction isDynamic(type: string): boolean {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (\n    type === 'string' || type === 'bytes' || parseTypeArray(type) === 'dynamic'\n  );\n}\n\n// Parse N,M from type<N>x<M>\n/**\n * @param type\n */\nfunction parseTypeNxM(type: string): [number, number] {\n  const match = /^\\D+(\\d+)x(\\d+)$/u.exec(type);\n  if (match === null || match.length < 1) {\n    throw new Error(`Invalid parseTypeNxM input \"${type}\".`);\n  }\n  return [parseInt(match[1], 10), parseInt(match[2], 10)];\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n  ToBufferInputTypes,\n} from '@ethereumjs/util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: ToBufferInputTypes;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(\n  message: ToBufferInputTypes,\n  signature: string,\n): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import {\n  arrToBufArr,\n  bufferToHex,\n  ecsign,\n  publicToAddress,\n  toBuffer,\n} from '@ethereumjs/util';\nimport { keccak256 } from 'ethereum-cryptography/keccak';\nimport { isHexString } from 'ethjs-util';\n\nimport { rawEncode, solidityPack } from './ethereumjs-abi-utils';\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n  numberToBuffer,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport type TypedDataV1Field = {\n  name: string;\n  type: string;\n  value: any;\n};\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport type MessageTypeProperty = {\n  name: string;\n  type: string;\n};\n\nexport type MessageTypes = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n};\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport type TypedMessage<T extends MessageTypes> = {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n};\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  // TODO: constrain type on `value`\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: Buffer | string] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      // TODO: return Buffer, remove string from return type\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : arrToBufArr(keccak256(encodeData(type, value, types, version))),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    if (typeof value === 'number') {\n      value = numberToBuffer(value);\n    } else if (isHexString(value)) {\n      const prepend = value.length % 2 ? '0' : '';\n      value = Buffer.from(prepend + (value as string).slice(2), 'hex');\n    } else {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type === 'string') {\n    if (typeof value === 'number') {\n      value = numberToBuffer(value);\n    } else {\n      value = Buffer.from(value ?? '', 'utf8');\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type.endsWith(']')) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      arrToBufArr(\n        keccak256(\n          rawEncode(\n            typeValuePairs.map(([t]) => t),\n            typeValuePairs.map(([, v]) => v),\n          ),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: (Buffer | string)[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  if (typeof primaryType !== 'string') {\n    throw new Error(\n      `Invalid findTypeDependencies input ${JSON.stringify(primaryType)}`,\n    );\n  }\n  const match = primaryType.match(/^\\w*/u) as RegExpMatchArray;\n  [primaryType] = match;\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encoded = encodeData(primaryType, data, types, version);\n  const hashed = keccak256(encoded);\n  const buf = arrToBufArr(hashed);\n  return buf;\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  const encodedHashType = Buffer.from(encodeType(primaryType, types), 'utf-8');\n  return arrToBufArr(keccak256(encodedHashType));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    // TODO: Fix types\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types } as any;\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Create a EIP-712 Domain Hash.\n * This hash is used at the top of the EIP-712 encoding.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the domain object.\n */\nfunction eip712DomainHash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const { domain } = sanitizedData;\n  const domainType = { EIP712Domain: sanitizedData.types.EIP712Domain };\n  return hashStruct('EIP712Domain', domain, domainType, version);\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(eip712DomainHash(typedData, version));\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return arrToBufArr(keccak256(Buffer.concat(parts)));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n  eip712DomainHash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return arrToBufArr(\n    keccak256(\n      solidityPack(\n        ['bytes32', 'bytes32'],\n        [\n          keccak256(\n            solidityPack(new Array(typedData.length).fill('string'), schema),\n          ),\n          keccak256(solidityPack(types, data)),\n        ],\n      ),\n    ),\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(data as TypedMessage<T>, version);\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(data as TypedMessage<T>, version);\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n","import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  ToBufferInputTypes,\n  toUnsigned,\n} from '@ethereumjs/util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: ToBufferInputTypes) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string | undefined {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    if (input < 0) {\n      return '0x';\n    }\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input as any as string}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n\n/**\n * Node's Buffer.from() method does not seem to buffer numbers correctly out of the box.\n * This helper method formats the number correct for Buffer.from to return correct buffer.\n *\n * @param num - The number to convert to buffer.\n * @returns The number in buffer form.\n */\nexport function numberToBuffer(num: number) {\n  const hexVal = num.toString(16);\n  const prepend = hexVal.length % 2 ? '0' : '';\n  return Buffer.from(prepend + hexVal, 'hex');\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","export const CHAIN_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  OTHER: \"other\",\n} as const;\n// eip155 for all evm chains\nexport type ChainNamespaceType = (typeof CHAIN_NAMESPACES)[keyof typeof CHAIN_NAMESPACES];\n\nexport const ADAPTER_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  MULTICHAIN: \"multichain\",\n} as const;\n// eip155 for all evm chains\nexport type AdapterNamespaceType = (typeof ADAPTER_NAMESPACES)[keyof typeof ADAPTER_NAMESPACES];\n\nexport type CustomChainConfig = {\n  chainNamespace: ChainNamespaceType;\n  /**\n   * The chain id of the chain\n   */\n  chainId: string;\n  /**\n   * RPC target Url for the chain\n   */\n  rpcTarget: string;\n  /**\n   * Display Name for the chain\n   */\n  displayName: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer: string;\n  /**\n   * Default currency ticker of the network (e.g: ETH)\n   */\n  ticker: string;\n  /**\n   * Name for currency ticker (e.g: `Ethereum`)\n   */\n  tickerName: string;\n  /**\n   * Number of decimals for the currency ticker (e.g: 18)\n   */\n  decimals?: number;\n};\n","import { CHAIN_NAMESPACES, ChainNamespaceType, CustomChainConfig } from \"./IChainInterface\";\nconst getDefaultNetworkId = (chainNamespace: ChainNamespaceType): number => {\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return 1;\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return 1;\n  }\n  throw new Error(`Chain namespace ${chainNamespace} is not supported`);\n};\n\nexport const getEvmChainConfig = (chainId: number): CustomChainConfig | null => {\n  const chainNamespace = CHAIN_NAMESPACES.EIP155;\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: `https://rpc.ankr.com/eth`,\n      displayName: \"Ethereum Mainnet\",\n      blockExplorer: \"https://etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 3) {\n    return {\n      chainNamespace,\n      chainId: \"0x3\",\n      rpcTarget: `https://rpc.ankr.com/eth_ropsten`,\n      displayName: \"Ropsten Testnet\",\n      blockExplorer: \"https://ropsten.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 4) {\n    return {\n      chainNamespace,\n      chainId: \"0x4\",\n      rpcTarget: `https://rpc.ankr.com/eth_rinkeby`,\n      displayName: \"Rinkeby Testnet\",\n      blockExplorer: \"https://rinkeby.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 5) {\n    return {\n      chainNamespace,\n      chainId: \"0x5\",\n      rpcTarget: `https://rpc.ankr.com/eth_goerli`,\n      displayName: \"Goerli Testnet\",\n      blockExplorer: \"https://goerli.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 137) {\n    return {\n      chainNamespace,\n      chainId: \"0x89\",\n      rpcTarget: \"https://rpc.ankr.com/polygon\",\n      displayName: \"Polygon Mainnet\",\n      blockExplorer: \"https://polygonscan.com\",\n      ticker: \"MATIC\",\n      tickerName: \"Polygon\",\n    };\n  }\n  if (chainId === 80001) {\n    return {\n      chainNamespace,\n      chainId: \"0x13881\",\n      rpcTarget: \"https://rpc.ankr.com/polygon_mumbai\",\n      displayName: \"Polygon Mumbai Testnet\",\n      blockExplorer: \"https://mumbai.polygonscan.com/\",\n      ticker: \"MATIC\",\n      tickerName: \"Polygon\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 56) {\n    return {\n      chainNamespace,\n      chainId: \"0x38\",\n      rpcTarget: \"https://rpc.ankr.com/bsc\",\n      displayName: \"Binance SmartChain Mainnet\",\n      blockExplorer: \"https://bscscan.com\",\n      ticker: \"BNB\",\n      tickerName: \"Binance SmartChain\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 97) {\n    return {\n      chainNamespace,\n      chainId: \"0x61\",\n      rpcTarget: \"https://rpc.ankr.com/bsc_testnet_chapel\",\n      displayName: \"Binance SmartChain Testnet\",\n      blockExplorer: \"https://testnet.bscscan.com\",\n      ticker: \"BNB\",\n      tickerName: \"Binance SmartChain\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 25) {\n    return {\n      chainNamespace,\n      chainId: \"0x19\",\n      rpcTarget: \"https://rpc.cronos.org\",\n      displayName: \"Cronos Mainnet\",\n      blockExplorer: \"https://cronoscan.com/\",\n      ticker: \"CRO\",\n      tickerName: \"Cronos\",\n    };\n  }\n  if (chainId === 338) {\n    return {\n      chainNamespace,\n      chainId: \"0x152\",\n      rpcTarget: \"https://rpc-t3.cronos.org/\",\n      displayName: \"Cronos Testnet\",\n      blockExplorer: \"https://cronoscan.com/\",\n      ticker: \"CRO\",\n      tickerName: \"Cronos\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 8217) {\n    return {\n      chainNamespace,\n      chainId: \"0x2019\",\n      rpcTarget: \"https://public-node-api.klaytnapi.com/v1/cypress\",\n      displayName: \"Klaytn Mainnet\",\n      blockExplorer: \"https://scope.klaytn.com\",\n      ticker: \"KLAY\",\n      tickerName: \"Klaytn\",\n      decimals: 18,\n    };\n  }\n\n  return null;\n};\n\nexport const getSolanaChainConfig = (chainId: number): CustomChainConfig | null => {\n  const chainNamespace = CHAIN_NAMESPACES.SOLANA;\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: \"https://rpc.ankr.com/solana\",\n      displayName: \"Solana Mainnet\",\n      blockExplorer: \"https://explorer.solana.com\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n      decimals: 9,\n    };\n  } else if (chainId === 2) {\n    return {\n      chainNamespace,\n      chainId: \"0x2\",\n      rpcTarget: \"https://api.testnet.solana.com\",\n      displayName: \"Solana Testnet\",\n      blockExplorer: \"https://explorer.solana.com?cluster=testnet\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n      decimals: 9,\n    };\n  } else if (chainId === 3) {\n    return {\n      chainNamespace,\n      chainId: \"0x3\",\n      rpcTarget: \"https://api.devnet.solana.com\",\n      displayName: \"Solana Devnet\",\n      blockExplorer: \"https://explorer.solana.com?cluster=devnet\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n      decimals: 9,\n    };\n  }\n\n  return null;\n};\n\nexport const getChainConfig = (chainNamespace: ChainNamespaceType, chainId?: number | string): CustomChainConfig | null => {\n  if (chainNamespace === CHAIN_NAMESPACES.OTHER) return null;\n  const finalChainId = chainId ? (typeof chainId === \"number\" ? chainId : parseInt(chainId, 16)) : getDefaultNetworkId(chainNamespace);\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return getEvmChainConfig(finalChainId);\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return getSolanaChainConfig(finalChainId);\n  }\n  return null;\n};\n","import { CustomError } from \"ts-custom-error\";\n\n// @flow\nexport interface IWeb3AuthError extends CustomError {\n  code: number;\n  message: string;\n  toString(): string;\n}\n\nexport type ErrorCodes = {\n  [key: number]: string;\n};\n\nexport abstract class Web3AuthError extends CustomError implements IWeb3AuthError {\n  code: number;\n\n  message: string;\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(message);\n\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"Web3AuthError\" });\n  }\n\n  toJSON(): IWeb3AuthError {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nexport class WalletInitializationError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5001: \"Wallet is not found\",\n    5002: \"Wallet is not installed\",\n    5003: \"Wallet is not ready yet\",\n    5004: \"Wallet window is blocked\",\n    5005: \"Wallet window has been closed by the user\",\n    5006: \"Incompatible chain namespace provided\",\n    5007: \"Adapter has already been included\",\n    5008: \"Invalid provider Config\",\n    5009: \"Provider is not ready yet\",\n    5010: \"Failed to connect with rpc url\",\n    5011: \"Invalid params passed in\",\n    5013: \"Invalid network provided\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletInitializationError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletInitializationError(code, `${WalletInitializationError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static notFound(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5001, extraMessage);\n  }\n\n  public static notInstalled(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5002, extraMessage);\n  }\n\n  public static notReady(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5003, extraMessage);\n  }\n\n  public static windowBlocked(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5004, extraMessage);\n  }\n\n  public static windowClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5005, extraMessage);\n  }\n\n  public static incompatibleChainNameSpace(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5006, extraMessage);\n  }\n\n  public static duplicateAdapterError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5007, extraMessage);\n  }\n\n  public static invalidProviderConfigError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5008, extraMessage);\n  }\n\n  public static providerNotReadyError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5009, extraMessage);\n  }\n\n  public static rpcConnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5010, extraMessage);\n  }\n\n  public static invalidParams(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5011, extraMessage);\n  }\n\n  public static invalidNetwork(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5013, extraMessage);\n  }\n}\n\n/**\n * wallet login errors\n */\n\nexport class WalletLoginError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5111: \"Failed to connect with wallet\",\n    5112: \"Failed to disconnect from wallet\",\n    5113: \"Wallet is not connected\",\n    5114: \"Wallet popup has been closed by the user\",\n    5115: \"User has already enabled mfa, please use the @web3auth/web3auth-web sdk for login with mfa\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletLoginError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletLoginError(code, `${WalletLoginError.messages[code]}. ${extraMessage}`);\n  }\n\n  public static connectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5111, extraMessage);\n  }\n\n  public static disconnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5112, extraMessage);\n  }\n\n  public static notConnectedError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5113, extraMessage);\n  }\n\n  public static popupClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5114, extraMessage);\n  }\n\n  public static mfaEnabled(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5115, extraMessage);\n  }\n}\n","export const MULTI_CHAIN_ADAPTERS = {\n  OPENLOGIN: \"openlogin\",\n  WALLET_CONNECT_V1: \"wallet-connect-v1\",\n  WALLET_CONNECT_V2: \"wallet-connect-v2\",\n};\n\nexport const SOLANA_ADAPTERS = {\n  TORUS_SOLANA: \"torus-solana\",\n  PHANTOM: \"phantom\",\n  SOLFLARE: \"solflare\",\n  SLOPE: \"slope\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const EVM_ADAPTERS = {\n  TORUS_EVM: \"torus-evm\",\n  METAMASK: \"metamask\",\n  COINBASE: \"coinbase\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const WALLET_ADAPTERS = {\n  ...EVM_ADAPTERS,\n  ...SOLANA_ADAPTERS,\n};\nexport type WALLET_ADAPTER_TYPE = (typeof WALLET_ADAPTERS)[keyof typeof WALLET_ADAPTERS];\nexport type SOLANA_ADAPTER_TYPE = (typeof SOLANA_ADAPTERS)[keyof typeof SOLANA_ADAPTERS];\nexport type EVM_ADAPTER_TYPE = (typeof EVM_ADAPTERS)[keyof typeof EVM_ADAPTERS];\nexport type MULTI_CHAIN_ADAPTER_TYPE = (typeof MULTI_CHAIN_ADAPTERS)[keyof typeof MULTI_CHAIN_ADAPTERS];\n\nexport const ADAPTER_NAMES = {\n  [MULTI_CHAIN_ADAPTERS.OPENLOGIN]: \"OpenLogin\",\n  [MULTI_CHAIN_ADAPTERS.WALLET_CONNECT_V1]: \"Wallet Connect v1\",\n  [MULTI_CHAIN_ADAPTERS.WALLET_CONNECT_V2]: \"Wallet Connect v2\",\n  [SOLANA_ADAPTERS.TORUS_SOLANA]: \"Torus\",\n  [SOLANA_ADAPTERS.PHANTOM]: \"Phantom\",\n  [SOLANA_ADAPTERS.SOLFLARE]: \"Solflare\",\n  [SOLANA_ADAPTERS.SLOPE]: \"Slope\",\n  [EVM_ADAPTERS.TORUS_EVM]: \"Torus\",\n  [EVM_ADAPTERS.METAMASK]: \"Metamask\",\n  [EVM_ADAPTERS.COINBASE]: \"Coinbase\",\n};\n","import { OPENLOGIN_NETWORK, OPENLOGIN_NETWORK_TYPE, OpenloginUserInfo } from \"@toruslabs/openlogin\";\nimport { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { getChainConfig } from \"../chain/config\";\nimport { AdapterNamespaceType, CHAIN_NAMESPACES, ChainNamespaceType, CustomChainConfig } from \"../chain/IChainInterface\";\nimport { WalletInitializationError, WalletLoginError } from \"../errors\";\nimport { SafeEventEmitterProvider } from \"../provider/IProvider\";\nimport { WALLET_ADAPTERS } from \"../wallet\";\n\nexport type UserInfo = OpenloginUserInfo;\n\nexport const ADAPTER_CATEGORY = {\n  EXTERNAL: \"external\",\n  IN_APP: \"in_app\",\n} as const;\nexport type ADAPTER_CATEGORY_TYPE = (typeof ADAPTER_CATEGORY)[keyof typeof ADAPTER_CATEGORY];\n\nexport interface AdapterInitOptions {\n  /**\n   * Whether to auto connect to the adapter based on redirect mode or saved adapters\n   */\n  autoConnect?: boolean;\n}\n\nexport const ADAPTER_STATUS = {\n  NOT_READY: \"not_ready\",\n  READY: \"ready\",\n  CONNECTING: \"connecting\",\n  CONNECTED: \"connected\",\n  DISCONNECTED: \"disconnected\",\n  ERRORED: \"errored\",\n} as const;\n\nexport const ADAPTER_EVENTS = {\n  ...ADAPTER_STATUS,\n  ADAPTER_DATA_UPDATED: \"adapter_data_updated\",\n} as const;\nexport type ADAPTER_STATUS_TYPE = (typeof ADAPTER_STATUS)[keyof typeof ADAPTER_STATUS];\n\nexport type CONNECTED_EVENT_DATA = {\n  adapter: string;\n  reconnected: boolean;\n};\n\nexport type UserAuthInfo = { idToken: string };\n\nexport interface BaseAdapterSettings {\n  clientId?: string;\n  sessionTime?: number;\n  chainConfig?: Partial<CustomChainConfig> & Pick<CustomChainConfig, \"chainNamespace\">;\n  web3AuthNetwork?: OPENLOGIN_NETWORK_TYPE;\n  useCoreKitKey?: boolean;\n}\n\nexport interface IAdapter<T> extends SafeEventEmitter {\n  adapterNamespace: AdapterNamespaceType;\n  currentChainNamespace: ChainNamespaceType;\n  chainConfigProxy: CustomChainConfig | null;\n  type: ADAPTER_CATEGORY_TYPE;\n  name: string;\n  sessionTime: number;\n  web3AuthNetwork: OPENLOGIN_NETWORK_TYPE;\n  clientId: string;\n  status: ADAPTER_STATUS_TYPE;\n  provider: SafeEventEmitterProvider | null;\n  adapterData?: unknown;\n  init(options?: AdapterInitOptions): Promise<void>;\n  disconnect(options?: { cleanup: boolean }): Promise<void>;\n  connect(params?: T): Promise<SafeEventEmitterProvider | null>;\n  getUserInfo(): Promise<Partial<UserInfo>>;\n  setAdapterSettings(adapterSettings: BaseAdapterSettings): void;\n  authenticateUser(): Promise<UserAuthInfo>;\n}\n\nexport abstract class BaseAdapter<T> extends SafeEventEmitter implements IAdapter<T> {\n  public adapterData?: unknown = {};\n\n  public sessionTime = 86400;\n\n  public clientId: string;\n\n  public web3AuthNetwork: OPENLOGIN_NETWORK_TYPE = OPENLOGIN_NETWORK.MAINNET;\n\n  protected rehydrated = false;\n\n  // should be added in constructor or from setAdapterSettings function\n  // before calling init function.\n  protected chainConfig: CustomChainConfig | null = null;\n\n  public abstract adapterNamespace: AdapterNamespaceType;\n\n  public abstract currentChainNamespace: ChainNamespaceType;\n\n  public abstract type: ADAPTER_CATEGORY_TYPE;\n\n  public abstract name: string;\n\n  public abstract status: ADAPTER_STATUS_TYPE;\n\n  constructor(options: BaseAdapterSettings = {}) {\n    super();\n    this.setAdapterSettings(options);\n  }\n\n  get chainConfigProxy(): CustomChainConfig | null {\n    return this.chainConfig ? { ...this.chainConfig } : null;\n  }\n\n  public abstract get provider(): SafeEventEmitterProvider | null;\n\n  public setAdapterSettings(options: BaseAdapterSettings): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n    if (options?.clientId) {\n      this.clientId = options.clientId;\n    }\n    if (options?.web3AuthNetwork) {\n      this.web3AuthNetwork = options.web3AuthNetwork;\n    }\n    const customChainConfig = options.chainConfig;\n    if (customChainConfig) {\n      if (!customChainConfig.chainNamespace) throw WalletInitializationError.notReady(\"ChainNamespace is required while setting chainConfig\");\n      this.currentChainNamespace = customChainConfig.chainNamespace;\n      // chainId is optional in this function.\n      // we go with mainnet chainId by default.\n      const defaultChainConfig = getChainConfig(customChainConfig.chainNamespace, customChainConfig.chainId);\n      // NOTE: It is being forced casted to CustomChainConfig to handle OTHER Chainnamespace\n      // where chainConfig is not required.\n      const finalChainConfig = { ...(defaultChainConfig || {}), ...customChainConfig } as CustomChainConfig;\n\n      this.chainConfig = finalChainConfig;\n    }\n  }\n\n  checkConnectionRequirements(): void {\n    // we reconnect without killing existing wallet connect session on calling connect again.\n    if (this.name === WALLET_ADAPTERS.WALLET_CONNECT_V1 && this.status === ADAPTER_STATUS.CONNECTING) return;\n    else if (this.status === ADAPTER_STATUS.CONNECTING) throw WalletInitializationError.notReady(\"Already connecting\");\n\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletLoginError.connectionError(\"Already connected\");\n    if (this.status !== ADAPTER_STATUS.READY)\n      throw WalletLoginError.connectionError(\n        \"Wallet adapter is not ready yet, Please wait for init function to resolve before calling connect/connectTo function\"\n      );\n  }\n\n  checkInitializationRequirements(): void {\n    if (!this.clientId) throw WalletInitializationError.invalidParams(\"Please initialize Web3Auth with a valid clientId in constructor\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n    if (!this.chainConfig.rpcTarget && this.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n      throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n    }\n\n    if (!this.chainConfig.chainId && this.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n      throw WalletInitializationError.invalidParams(\"chainID is required in chainConfig\");\n    }\n    if (this.status === ADAPTER_STATUS.NOT_READY) return;\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletInitializationError.notReady(\"Already connected\");\n    if (this.status === ADAPTER_STATUS.READY) throw WalletInitializationError.notReady(\"Adapter is already initialized\");\n  }\n\n  checkDisconnectionRequirements(): void {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n  }\n\n  updateAdapterData(data: unknown): void {\n    this.adapterData = data;\n    this.emit(ADAPTER_EVENTS.ADAPTER_DATA_UPDATED, { adapterName: this.name, data });\n  }\n\n  abstract init(options?: AdapterInitOptions): Promise<void>;\n  abstract connect(params?: T): Promise<SafeEventEmitterProvider | null>;\n  abstract disconnect(): Promise<void>;\n  abstract getUserInfo(): Promise<Partial<UserInfo>>;\n  abstract authenticateUser(): Promise<UserAuthInfo>;\n}\n\nexport interface BaseAdapterConfig {\n  label: string;\n  showOnModal?: boolean;\n  showOnMobile?: boolean;\n  showOnDesktop?: boolean;\n}\n\nexport type LoginMethodConfig = Record<\n  string,\n  {\n    /**\n     * Display Name. If not provided, we use the default for openlogin app\n     */\n    name: string;\n    /**\n     * Description for button. If provided, it renders as a full length button. else, icon button\n     */\n    description?: string;\n    /**\n     * Logo to be shown on mouse hover. If not provided, we use the default for openlogin app\n     */\n    logoHover?: string;\n    /**\n     * Logo to be shown on dark background (dark theme). If not provided, we use the default for openlogin app\n     */\n    logoLight?: string;\n    /**\n     * Logo to be shown on light background (light theme). If not provided, we use the default for openlogin app\n     */\n    logoDark?: string;\n    /**\n     * Show login button on the main list\n     */\n    mainOption?: boolean;\n    /**\n     * Whether to show the login button on modal or not\n     */\n    showOnModal?: boolean;\n    /**\n     * Whether to show the login button on desktop\n     */\n    showOnDesktop?: boolean;\n    /**\n     * Whether to show the login button on mobile\n     */\n    showOnMobile?: boolean;\n  }\n>;\n\nexport interface IWalletConnectExtensionAdapter {\n  name: string;\n  chains: ChainNamespaceType[];\n  logo: string;\n  mobile: {\n    native: string;\n    universal: string;\n  };\n  desktop: {\n    native: string;\n    universal: string;\n  };\n}\n\nexport interface WalletConnectV1Data {\n  uri: string;\n  extensionAdapters: IWalletConnectExtensionAdapter[];\n}\n\nexport interface IAdapterDataEvent {\n  adapterName: string;\n  data: unknown;\n}\n\nexport interface INetworkSwitchProvider {\n  addChain(chainConfig: CustomChainConfig): Promise<void>;\n  switchChain(chainId: string): Promise<void>;\n}\nexport interface INetworkSwitch {\n  addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n  switchNetwork(params: { currentChainConfig: CustomChainConfig; newChainConfig: Partial<CustomChainConfig>; appOrigin: string }): Promise<boolean>;\n}\n\nexport abstract class BaseNetworkSwitch implements INetworkSwitch {\n  abstract switchNetwork(params: {\n    currentChainConfig: CustomChainConfig;\n    newChainConfig: Partial<CustomChainConfig>;\n    appOrigin: string;\n  }): Promise<boolean>;\n\n  abstract addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n}\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"web3auth-logger\");\n","export function storageAvailable(type: \"sessionStorage\" | \"localStorage\"): boolean {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage: Storage;\n  try {\n    storage = (window as any)[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error: unknown) {\n    const _error = error as DOMException;\n    return !!(\n      _error &&\n      // everything except Firefox\n      (_error.code === 22 ||\n        // Firefox\n        _error.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        _error.name === \"QuotaExceededError\" ||\n        // Firefox\n        _error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storageExists &&\n      storageLength !== 0\n    );\n  }\n}\n\nexport const isHexStrict = (hex: string): boolean => {\n  return (typeof hex === \"string\" || typeof hex === \"number\") && /^(-)?0x[0-9a-f]*$/i.test(hex);\n};\n","import type { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport type { MessageParams, TransactionParams, TypedMessageParams, WalletMiddlewareOptions } from \"./interfaces\";\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw ethErrors.rpc.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as any).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers, IProviderHandlers } from \"./interfaces\";\nimport { createWalletMiddleware } from \"./walletMidddleware\";\n\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }),\n  ]);\n  return ethMiddleware;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain),\n  });\n}\n\n// #region account middlewares\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount),\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector } from \"@walletconnect/types\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, isHexStrict, log, WalletInitializationError, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./walletConnectUtils\";\n\nexport interface WalletConnectProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectProvider extends BaseProvider<BaseProviderConfig, WalletConnectProviderState, IConnector> {\n  private connector: IConnector | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectProviderConfig; state?: BaseProviderState; connector?: IConnector }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: IConnector;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectProvider> => {\n    const providerFactory = new WalletConnectProvider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: IConnector): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId, addChain = true, lookup = true }: { chainId: string; addChain?: boolean; lookup?: boolean }): Promise<void> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    const { rpcTarget, displayName } = currentChainConfig;\n    if (addChain) {\n      try {\n        await this.connector.sendCustomRequest({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              chainId,\n              chainName: displayName,\n              rpcUrls: [rpcTarget],\n              blockExplorerUrls: [currentChainConfig.blockExplorer],\n              nativeCurrency: {\n                name: currentChainConfig.tickerName,\n                symbol: currentChainConfig.ticker,\n                decimals: currentChainConfig.decimals || 18,\n              },\n            },\n          ],\n        });\n      } catch (error) {\n        log.error(error);\n      }\n    }\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (error) {\n      log.error(error);\n      // ignore this error because metamask & others return provider.result as null\n      // wallet connect thinks this is wrong\n      if (error.message !== \"JSON RPC response format is invalid\") {\n        throw error;\n      }\n    }\n\n    this.configure({ chainConfig: currentChainConfig });\n    if (lookup) await this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const { rpcTarget, displayName } = chainConfig;\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_addEthereumChain\",\n        params: [\n          {\n            chainId: chainConfig.chainId,\n            chainName: displayName,\n            rpcUrls: [rpcTarget],\n            blockExplorerUrls: [chainConfig.blockExplorer],\n            nativeCurrency: {\n              name: chainConfig.tickerName,\n              symbol: chainConfig.ticker,\n              decimals: chainConfig.decimals || 18,\n            },\n          },\n        ],\n      });\n      super.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n      throw error;\n    }\n  }\n\n  protected async lookupNetwork(connector: IConnector): Promise<string> {\n    if (!connector.connected) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    const connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : `0x${connector.chainId.toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.provider.emit(\"connect\", { chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  private async setupEngine(connector: IConnector): Promise<void> {\n    const providerHandlers = getProviderHandlers({ connector });\n    this.update({\n      accounts: connector.accounts || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    if (!this.config.skipLookupNetwork) await this.lookupNetwork(connector);\n  }\n\n  private async onConnectorStateUpdate(connector: IConnector) {\n    connector.on(\"session_update\", async (error: Error | null, payload) => {\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n      const { accounts, chainId: connectedChainId, rpcUrl }: { accounts?: string[]; chainId?: number; rpcUrl?: string } = payload.params[0];\n      // Check if accounts changed and trigger event\n      if (accounts?.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts,\n        });\n        // await this.setupEngine(connector);\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n      const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n      // Check if chainId changed and trigger event\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedChainId) || {};\n        // Handle rpcUrl update\n        this.configure({\n          chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector, ITxData } from \"@walletconnect/types\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\n\nexport function getProviderHandlers({ connector }: { connector: IConnector }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      const { accounts } = connector;\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.sendTransaction(txParams as ITxData);\n      return result;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTransaction(txParams as ITxData);\n      return result;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n  };\n}\n","import { stripHexPrefix } from \"@ethereumjs/util\";\nimport BigNumber from \"bignumber.js\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { isValidAddress } from \"@ethereumjs/util\";\nimport { SignTypedDataVersion, TYPED_MESSAGE_SCHEMA, TypedDataV1Field, typedSignatureHash } from \"@metamask/eth-sig-util\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { isHexStrict } from \"@web3auth/base\";\nimport assert from \"assert\";\nimport { BigNumber } from \"bignumber.js\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport jsonschema from \"jsonschema\";\n\nimport { TypedMessageParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EIP1159GasData> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n\nexport const validateTypedMessageParams = (parameters: TypedMessageParams<unknown>, activeChainId: number) => {\n  try {\n    assert.ok(parameters && typeof parameters === \"object\", \"Params must be an object.\");\n    assert.ok(\"data\" in parameters, 'Params must include a \"data\" field.');\n    assert.ok(\"from\" in parameters, 'Params must include a \"from\" field.');\n    assert.ok(\n      typeof parameters.from === \"string\" && isValidAddress(parameters.from),\n      '\"from\" field must be a valid, lowercase, hexadecimal Ethereum address string.'\n    );\n    let data = null;\n    let chainId = null;\n    switch ((parameters as TypedMessageParams<unknown>).version) {\n      case SignTypedDataVersion.V1:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        assert.ok(Array.isArray(data as unknown), \"params.data must be an array.\");\n        assert.doesNotThrow(() => {\n          typedSignatureHash(data as TypedDataV1Field[]);\n        }, \"Signing data must be valid EIP-712 typed data.\");\n        break;\n      case SignTypedDataVersion.V3:\n      case SignTypedDataVersion.V4:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n\n        assert.ok(data.primaryType in data.types, `Primary type of \"${data.primaryType}\" has no type definition.`);\n        const validation = jsonschema.validate(data, TYPED_MESSAGE_SCHEMA.properties);\n        assert.strictEqual(validation.errors.length, 0, \"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.\");\n        chainId = data.domain?.chainId;\n        if (chainId) {\n          assert.ok(!Number.isNaN(activeChainId), `Cannot sign messages for chainId \"${chainId}\", because Web3Auth is switching networks.`);\n          if (typeof chainId === \"string\") {\n            chainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n          }\n          assert.strictEqual(chainId, activeChainId, `Provided chainId \"${chainId}\" must match the active chainId \"${activeChainId}\"`);\n        }\n        break;\n      default:\n        assert.fail(`Unknown typed data version \"${(parameters as TypedMessageParams<unknown>).version}\"`);\n    }\n  } catch (error) {\n    throw ethErrors.rpc.invalidInput({\n      message: error?.message,\n    });\n  }\n};\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport { privateToAddress, stripHexPrefix } from \"@ethereumjs/util\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { SafeEventEmitterProvider, signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { isHexStrict, log } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\nimport { validateTypedMessageParams } from \"./TransactionFormatter/utils\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return signedTx;\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<string[], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      const params = {\n        ...msgParams,\n        version: SignTypedDataVersion.V1,\n      };\n      validateTypedMessageParams(params, finalChainId);\n      const data = typeof params.data === \"string\" ? JSON.parse(params.data) : params.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import { addHexPrefix, stripHexPrefix } from \"@ethereumjs/util\";\nimport { BigNumber } from \"bignumber.js\";\nimport BN from \"bn.js\";\n\nexport function bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BN) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BN {\n  if (BN.isBN(inputHex)) return inputHex;\n  return new BN(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BN, numerator: number | string, denominator: number | string): BN {\n  const numberBN = new BN(numerator);\n  const denomBN = new BN(denominator);\n  return targetBN.mul(numberBN).div(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import { Common, Hardfork } from \"@ethereumjs/common\";\nimport { addHexPrefix, stripHexPrefix } from \"@ethereumjs/util\";\nimport { Block } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { TransactionParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, FallbackGasData, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<CustomChainConfig>({ method: \"eth_provider_config\", params: [] })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.London : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      // if gas is not provided explicitly, estimate it.\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gas) {\n      const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n      if (defaultGasLimit) {\n        clonedTxParams.gasLimit = defaultGasLimit;\n      }\n    } else {\n      clonedTxParams.gasLimit = clonedTxParams.gas;\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        // TODO: kovan is not working due to a bug in metamask api\n        const estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium)),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.muln(0.9);\n    const bufferedGasLimitBn = initialGasLimitBn.muln(multiplier);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createAccountMiddleware, createChainSwitchMiddleware, createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers } from \"../../rpc/interfaces\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<string[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw ethErrors.provider.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this._providerEngineProxy.emit(\"chainChanged\", chainId);\n      this._providerEngineProxy.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n          decimals: nativeCurrency?.decimals || 18,\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","import { TypeOutput, intToBuffer, toType } from '@ethereumjs/util'\nimport { buf as crc32Buffer } from 'crc-32'\nimport { EventEmitter } from 'events'\n\nimport * as goerli from './chains/goerli.json'\nimport * as mainnet from './chains/mainnet.json'\nimport * as rinkeby from './chains/rinkeby.json'\nimport * as ropsten from './chains/ropsten.json'\nimport * as sepolia from './chains/sepolia.json'\nimport { EIPs } from './eips'\nimport { Chain, CustomChain, Hardfork } from './enums'\nimport { hardforks as HARDFORK_SPECS } from './hardforks'\nimport { parseGethGenesis } from './utils'\n\nimport type { ConsensusAlgorithm, ConsensusType } from './enums'\nimport type {\n  BootstrapNodeConfig,\n  CasperConfig,\n  ChainConfig,\n  ChainName,\n  ChainsConfig,\n  CliqueConfig,\n  CommonOpts,\n  CustomCommonOpts,\n  EthashConfig,\n  GenesisBlockConfig,\n  GethConfigOpts,\n  HardforkConfig,\n} from './types'\nimport type { BigIntLike } from '@ethereumjs/util'\n\ntype HardforkSpecKeys = keyof typeof HARDFORK_SPECS\ntype HardforkSpecValues = typeof HARDFORK_SPECS[HardforkSpecKeys]\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport class Common extends EventEmitter {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  private _chainParams: ChainConfig\n  private _hardfork: string | Hardfork\n  private _eips: number[] = []\n  private _customChains: ChainConfig[]\n\n  private HARDFORK_CHANGES: [HardforkSpecKeys, HardforkSpecValues][]\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<ChainConfig> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumRinkebyTestnet,\n            chainId: 421611,\n            networkId: 421611,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumOne) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumOne,\n            chainId: 42161,\n            networkId: 42161,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Static method to load and set common from a geth genesis json\n   * @param genesisJson json of geth configuration\n   * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n   * @returns Common\n   */\n  static fromGethGenesis(\n    genesisJson: any,\n    { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge }: GethConfigOpts\n  ): Common {\n    const genesisParams = parseGethGenesis(genesisJson, chain, mergeForkIdPostMerge)\n    const common = new Common({\n      chain: genesisParams.name ?? 'custom',\n      customChains: [genesisParams],\n      eips,\n      hardfork: hardfork ?? genesisParams.hardfork,\n    })\n    if (genesisHash !== undefined) {\n      common.setForkHashes(genesisHash)\n    }\n    return common\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId bigint id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: bigint): boolean {\n    const initializedChains = this._getInitializedChains()\n    return Boolean((initializedChains['names'] as ChainName)[chainId.toString()])\n  }\n\n  private static _getChainParams(\n    chain: string | number | Chain | bigint,\n    customChains?: ChainConfig[]\n  ): ChainConfig {\n    const initializedChains = this._getInitializedChains(customChains)\n    if (typeof chain === 'number' || typeof chain === 'bigint') {\n      chain = chain.toString()\n\n      if ((initializedChains['names'] as ChainName)[chain]) {\n        const name: string = (initializedChains['names'] as ChainName)[chain]\n        return initializedChains[name] as ChainConfig\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain] !== undefined) {\n      return initializedChains[chain] as ChainConfig\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  constructor(opts: CommonOpts) {\n    super()\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Merge\n    // Assign hardfork changes in the sequence of the applied hardforks\n    this.HARDFORK_CHANGES = this.hardforks().map((hf) => [\n      hf.name as HardforkSpecKeys,\n      HARDFORK_SPECS[hf.name as HardforkSpecKeys],\n    ])\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.hardfork !== undefined) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain representation.\n   *              Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | bigint | object): ChainConfig {\n    if (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain, this._customChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or bigint when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if (!(param in chain)) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as ChainConfig\n    } else {\n      throw new Error('Wrong input format')\n    }\n    for (const hf of this.hardforks()) {\n      if (hf.block === undefined) {\n        throw new Error(`Hardfork cannot have undefined block number`)\n      }\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    let existing = false\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td : total difficulty of the parent block (for block hf) OR of the chain latest (for chain hf)\n   * @param timestamp: timestamp in seconds at which block was/is to be minted\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): string {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    td = toType(td, TypeOutput.BigInt)\n    timestamp = toType(timestamp, TypeOutput.Number)\n\n    // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n    const hfs = this.hardforks().filter(\n      (hf) =>\n        hf.block !== null || (hf.ttd !== null && hf.ttd !== undefined) || hf.timestamp !== undefined\n    )\n    const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    const doubleTTDHF = hfs\n      .slice(mergeIndex + 1)\n      .findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    if (doubleTTDHF >= 0) {\n      throw Error(`More than one merge hardforks found with ttd specified`)\n    }\n\n    // Find the first hardfork that has a block number greater than `blockNumber`\n    // (skips the merge hardfork since it cannot have a block number specified).\n    // If timestamp is not provided, it also skips timestamps hardforks to continue\n    // discovering/checking number hardforks.\n    let hfIndex = hfs.findIndex(\n      (hf) =>\n        (hf.block !== null && hf.block > blockNumber) ||\n        (timestamp !== undefined && Number(hf.timestamp) > timestamp)\n    )\n\n    if (hfIndex === -1) {\n      // all hardforks apply, set hfIndex to the last one as that's the candidate\n      hfIndex = hfs.length\n    } else if (hfIndex === 0) {\n      // cannot have a case where a block number is before all applied hardforks\n      // since the chain has to start with a hardfork\n      throw Error('Must have at least one hardfork at block 0')\n    }\n\n    // If timestamp is not provided, we need to rollback to the last hf with block or ttd\n    if (timestamp === undefined) {\n      const stepBack = hfs\n        .slice(0, hfIndex)\n        .reverse()\n        .findIndex((hf) => hf.block !== null || hf.ttd !== undefined)\n      hfIndex = hfIndex - stepBack\n    }\n    // Move hfIndex one back to arrive at candidate hardfork\n    hfIndex = hfIndex - 1\n\n    // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n    // hardforks. so it will now be needed to rollback\n    if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n      // We're on the merge hardfork.  Let's check the TTD\n      if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd!) > td) {\n        // Merge ttd greater than current td so we're on hardfork before merge\n        hfIndex -= 1\n      }\n    } else {\n      if (mergeIndex >= 0 && td !== undefined && td !== null) {\n        if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd!) > td) {\n          throw Error('Maximum HF determined by total difficulty is lower than the block number HF')\n        } else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd!) <= td) {\n          throw Error('HF determined by block number is lower than the minimum total difficulty HF')\n        }\n      }\n    }\n\n    const hfStartIndex = hfIndex\n    // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n    // This won't anyway be the case with Merge hfs\n    for (; hfIndex < hfs.length - 1; hfIndex++) {\n      // break out if hfIndex + 1 is not scheduled at hfIndex\n      if (\n        hfs[hfIndex].block !== hfs[hfIndex + 1].block ||\n        hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp\n      ) {\n        break\n      }\n    }\n\n    if (timestamp) {\n      const minTimeStamp = hfs\n        .slice(0, hfStartIndex)\n        .reduce((acc: number, hf: HardforkConfig) => Math.max(Number(hf.timestamp ?? '0'), acc), 0)\n      if (minTimeStamp > timestamp) {\n        throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`)\n      }\n\n      const maxTimeStamp = hfs\n        .slice(hfIndex + 1)\n        .reduce(\n          (acc: number, hf: HardforkConfig) => Math.min(Number(hf.timestamp ?? timestamp), acc),\n          timestamp\n        )\n      if (maxTimeStamp < timestamp) {\n        throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`)\n      }\n    }\n    const hardfork = hfs[hfIndex]\n    return hardfork.name\n  }\n\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @param timestamp\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): string {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params or null if hardfork not on chain\n   */\n  _getHardfork(hardfork: string | Hardfork): HardforkConfig | null {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    return null\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n      if (EIPs[eip].requiredEIPs !== undefined) {\n        for (const elem of EIPs[eip].requiredEIPs) {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        }\n      }\n    }\n    this._eips = eips\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precedence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  param(topic: string, name: string): bigint {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip)\n      if (value !== undefined) return value\n    }\n    return this.paramByHardfork(topic, name, this._hardfork)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): bigint {\n    let value = null\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = typeof valueEIP === 'bigint' ? valueEIP : value\n        }\n        // Parameter-inlining HF file (e.g. istanbul.json)\n      } else {\n        if (hfChanges[1][topic] === undefined) {\n          throw new Error(`Topic ${topic} not defined`)\n        }\n        if (hfChanges[1][topic][name] !== undefined) {\n          value = hfChanges[1][topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return BigInt(value ?? 0)\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `undefined` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): bigint | undefined {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = EIPs[eip]\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`)\n    }\n    if (eipParams[topic][name] === undefined) {\n      return undefined\n    }\n    const value = eipParams[topic][name].v\n    return BigInt(value)\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number or\n   * optional provided total difficulty (Merge HF)\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   * @param td Total difficulty\n   *    * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByBlock(\n    topic: string,\n    name: string,\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): bigint {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp)\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this.eips().includes(eip)) {\n      return true\n    }\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        if ((hf['eips'] as number[]).includes(eip)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(hardfork: string | Hardfork | null, blockNumber: BigIntLike): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const hfBlock = this.hardforkBlock(hardfork)\n    if (typeof hfBlock === 'bigint' && hfBlock !== BigInt(0) && blockNumber >= hfBlock) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BigIntLike): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(hardfork1: string | Hardfork | null, hardfork2: string | Hardfork): boolean {\n    hardfork1 = hardfork1 ?? this._hardfork\n    const hardforks = this.hardforks()\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork): boolean {\n    return this.hardforkGteHardfork(null, hardfork)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const block = this._getHardfork(hardfork)?.['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return BigInt(block)\n  }\n\n  hardforkTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const timestamp = this._getHardfork(hardfork)?.['timestamp']\n    if (timestamp === undefined || timestamp === null) {\n      return null\n    }\n    return BigInt(timestamp)\n  }\n\n  /**\n   * Returns the hardfork change block for eip\n   * @param eip EIP number\n   * @returns Block number or null if unscheduled\n   */\n  eipBlock(eip: number): bigint | null {\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if ('eips' in hf) {\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (hf['eips'].includes(eip)) {\n          return this.hardforkBlock(hfChanges[0])\n        }\n      }\n    }\n    return null\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTTD(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const ttd = this._getHardfork(hardfork)?.['ttd']\n    if (ttd === undefined || ttd === null) {\n      return null\n    }\n    return BigInt(ttd)\n  }\n\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isHardforkBlock(blockNumber: BigIntLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const block = this.hardforkBlock(hardfork)\n    return typeof block === 'bigint' && block !== BigInt(0) ? block === blockNumber : false\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block timestamp, number or null if not available\n   */\n  nextHardforkBlockOrTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const hfs = this.hardforks()\n    let hfIndex = hfs.findIndex((hf) => hf.name === hardfork)\n    // If the current hardfork is merge, go one behind as merge hf is not part of these\n    // calcs even if the merge hf block is set\n    if (hardfork === Hardfork.Merge) {\n      hfIndex -= 1\n    }\n    // Hardfork not found\n    if (hfIndex < 0) {\n      return null\n    }\n\n    let currHfTimeOrBlock = hfs[hfIndex].timestamp ?? hfs[hfIndex].block\n    currHfTimeOrBlock =\n      currHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined\n        ? Number(currHfTimeOrBlock)\n        : null\n\n    const nextHf = hfs.slice(hfIndex + 1).find((hf) => {\n      let hfTimeOrBlock = hf.timestamp ?? hf.block\n      hfTimeOrBlock =\n        hfTimeOrBlock !== null && hfTimeOrBlock !== undefined ? Number(hfTimeOrBlock) : null\n      return (\n        hf.name !== Hardfork.Merge &&\n        hfTimeOrBlock !== null &&\n        hfTimeOrBlock !== undefined &&\n        hfTimeOrBlock !== currHfTimeOrBlock\n      )\n    })\n    // If no next hf found with valid block or timestamp return null\n    if (nextHf === undefined) {\n      return null\n    }\n\n    const nextHfBlock = nextHf.timestamp ?? nextHf.block\n    if (nextHfBlock === null || nextHfBlock === undefined) {\n      return null\n    }\n\n    return BigInt(nextHfBlock)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated\n   */\n  nextHardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    let hfBlock = this.hardforkBlock(hardfork)\n    // If this is a merge hardfork with block not set, then we fallback to previous hardfork\n    // to find the nextHardforkBlock\n    if (hfBlock === null && hardfork === Hardfork.Merge) {\n      const hfs = this.hardforks()\n      const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n      if (mergeIndex < 0) {\n        throw Error(`Merge hardfork should have been found`)\n      }\n      hfBlock = this.hardforkBlock(hfs[mergeIndex - 1].name)\n    }\n    if (hfBlock === null) {\n      return null\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    const nextHfBlock = this.hardforks().reduce((acc: bigint | null, hf: HardforkConfig) => {\n      // We need to ignore the merge block in our next hardfork calc\n      const block = BigInt(\n        hf.block === null || (hf.ttd !== undefined && hf.ttd !== null) ? 0 : hf.block\n      )\n      // Typescript can't seem to follow that the hfBlock is not null at this point\n      return block > hfBlock! && acc === null ? block : acc\n    }, null)\n    return nextHfBlock\n  }\n\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isNextHardforkBlock(blockNumber: BigIntLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const nextHardforkBlock = this.nextHardforkBlock(hardfork)\n\n    return nextHardforkBlock === null ? false : nextHardforkBlock === blockNumber\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @param genesisHash Genesis block hash of the chain\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork: string | Hardfork, genesisHash: Buffer) {\n    let hfBuffer = Buffer.alloc(0)\n    let prevBlockOrTime = 0\n    for (const hf of this.hardforks()) {\n      const { block, timestamp, name } = hf\n      // Timestamp to be used for timestamp based hfs even if we may bundle\n      // block number with them retrospectively\n      let blockOrTime = timestamp ?? block\n      blockOrTime = blockOrTime !== null ? Number(blockOrTime) : null\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same blockOrTime HFs\n      // and on the merge since forkhash doesn't change on merge hf\n      if (\n        typeof blockOrTime === 'number' &&\n        blockOrTime !== 0 &&\n        blockOrTime !== prevBlockOrTime &&\n        name !== Hardfork.Merge\n      ) {\n        const hfBlockBuffer = Buffer.from(blockOrTime.toString(16).padStart(16, '0'), 'hex')\n        hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer])\n        prevBlockOrTime = blockOrTime\n      }\n\n      if (hf.name === hardfork) break\n    }\n    const inputBuffer = Buffer.concat([genesisHash, hfBuffer])\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = intToBuffer(crc32Buffer(inputBuffer) >>> 0).toString('hex')\n    return `0x${forkhash}`\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n   */\n  forkHash(hardfork?: string | Hardfork, genesisHash?: Buffer): string {\n    hardfork = hardfork ?? this._hardfork\n    const data = this._getHardfork(hardfork)\n    if (\n      data === null ||\n      (data?.block === null && data?.timestamp === undefined && data?.ttd === undefined)\n    ) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data?.forkHash !== null && data?.forkHash !== undefined) {\n      return data.forkHash\n    }\n    if (!genesisHash) throw new Error('genesisHash required for forkHash calculation')\n    return this._calcForkHash(hardfork, genesisHash)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): HardforkConfig | null {\n    const resArray = this.hardforks().filter((hf: HardforkConfig) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Sets any missing forkHashes on the passed-in {@link Common} instance\n   * @param common The {@link Common} to set the forkHashes for\n   * @param genesisHash The genesis block hash\n   */\n  setForkHashes(genesisHash: Buffer) {\n    for (const hf of this.hardforks()) {\n      const blockOrTime = hf.timestamp ?? hf.block\n      if (\n        (hf.forkHash === null || hf.forkHash === undefined) &&\n        ((blockOrTime !== null && blockOrTime !== undefined) || typeof hf.ttd !== 'undefined')\n      ) {\n        hf.forkHash = this.forkHash(hf.name, genesisHash)\n      }\n    }\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlockConfig {\n    return this._chainParams.genesis\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkConfig[] {\n    return this._chainParams.hardforks\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNodeConfig[] {\n    return this._chainParams.bootstrapNodes\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams.dnsNetworks!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainId(): bigint {\n    return BigInt(this._chainParams.chainId)\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams.name\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkId(): bigint {\n    return BigInt(this._chainParams.networkId)\n  }\n\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? this._chainParams['consensus']['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? (this._chainParams['consensus']['algorithm'] as ConsensusAlgorithm)\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: empty object\n   * clique: period, epoch\n   * casper: empty object\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusConfig(): { [key: string]: CliqueConfig | EthashConfig | CasperConfig } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return (\n      value ?? this._chainParams['consensus'][this.consensusAlgorithm() as ConsensusAlgorithm] ?? {}\n    )\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.removeAllListeners()\n    return copy\n  }\n\n  static _getInitializedChains(customChains?: ChainConfig[]): ChainsConfig {\n    const names: ChainName = {}\n    for (const [name, id] of Object.entries(Chain)) {\n      names[id] = name.toLowerCase()\n    }\n    const chains = { mainnet, ropsten, rinkeby, goerli, sepolia } as ChainsConfig\n    if (customChains) {\n      for (const chain of customChains) {\n        const { name } = chain\n        names[chain.chainId.toString()] = name\n        chains[name] = chain\n      }\n    }\n    chains.names = names\n    return chains\n  }\n}\n","export const EIPs: { [key: number]: any } = {\n  1153: require('./1153.json'),\n  1559: require('./1559.json'),\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2565: require('./2565.json'),\n  2718: require('./2718.json'),\n  2929: require('./2929.json'),\n  2930: require('./2930.json'),\n  3074: require('./3074.json'),\n  3198: require('./3198.json'),\n  3529: require('./3529.json'),\n  3540: require('./3540.json'),\n  3541: require('./3541.json'),\n  3554: require('./3554.json'),\n  3607: require('./3607.json'),\n  3651: require('./3651.json'),\n  3670: require('./3670.json'),\n  3675: require('./3675.json'),\n  3855: require('./3855.json'),\n  3860: require('./3860.json'),\n  4345: require('./4345.json'),\n  4399: require('./4399.json'),\n  4844: require('./4844.json'),\n  4895: require('./4895.json'),\n  5133: require('./5133.json'),\n}\n","export enum Chain {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Goerli = 5,\n  Sepolia = 11155111,\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  GrayGlacier = 'grayGlacier',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Merge = 'merge',\n  Shanghai = 'shanghai',\n  ShardingForkDev = 'shardingFork',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  ArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n  /**\n   * Arbitrum One - mainnet for Arbitrum roll-up\n   *\n   * - [Documentation](https://developer.offchainlabs.com/public-chains)\n   */\n  ArbitrumOne = 'arbitrum-one',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n","export const hardforks = {\n  chainstart: require('./chainstart.json'),\n  homestead: require('./homestead.json'),\n  dao: require('./dao.json'),\n  tangerineWhistle: require('./tangerineWhistle.json'),\n  spuriousDragon: require('./spuriousDragon.json'),\n  byzantium: require('./byzantium.json'),\n  constantinople: require('./constantinople.json'),\n  petersburg: require('./petersburg.json'),\n  istanbul: require('./istanbul.json'),\n  muirGlacier: require('./muirGlacier.json'),\n  berlin: require('./berlin.json'),\n  london: require('./london.json'),\n  shanghai: require('./shanghai.json'),\n  arrowGlacier: require('./arrowGlacier.json'),\n  grayGlacier: require('./grayGlacier.json'),\n  mergeForkIdTransition: require('./mergeForkIdTransition.json'),\n  merge: require('./merge.json'),\n  shardingFork: require('./sharding.json'),\n}\n","export * from './common'\nexport * from './enums'\nexport * from './types'\nexport * from './utils'\n","import { intToHex, isHexPrefixed, stripHexPrefix } from '@ethereumjs/util'\n\nimport { Hardfork } from './enums'\n\ntype ConfigHardfork =\n  | { name: string; block: null; timestamp: number }\n  | { name: string; block: number; timestamp?: number }\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */\nfunction formatNonce(nonce: string): string {\n  if (!nonce || nonce === '0x0') {\n    return '0x0000000000000000'\n  }\n  if (isHexPrefixed(nonce)) {\n    return '0x' + stripHexPrefix(nonce).padStart(16, '0')\n  }\n  return '0x' + nonce.padStart(16, '0')\n}\n\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */\nfunction parseGethParams(json: any, mergeForkIdPostMerge: boolean = true) {\n  const {\n    name,\n    config,\n    difficulty,\n    mixHash,\n    gasLimit,\n    coinbase,\n    baseFeePerGas,\n  }: {\n    name: string\n    config: any\n    difficulty: string\n    mixHash: string\n    gasLimit: string\n    coinbase: string\n    baseFeePerGas: string\n  } = json\n  let { extraData, timestamp, nonce }: { extraData: string; timestamp: string; nonce: string } =\n    json\n  const genesisTimestamp = Number(timestamp)\n  const { chainId }: { chainId: number } = config\n\n  // geth is not strictly putting empty fields with a 0x prefix\n  if (extraData === '') {\n    extraData = '0x'\n  }\n  // geth may use number for timestamp\n  if (!isHexPrefixed(timestamp)) {\n    timestamp = intToHex(parseInt(timestamp))\n  }\n  // geth may not give us a nonce strictly formatted to an 8 byte hex string\n  if (nonce.length !== 18) {\n    nonce = formatNonce(nonce)\n  }\n\n  // EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n  // but have different configuration parameters in geth genesis parameters\n  if (config.eip155Block !== config.eip158Block) {\n    throw new Error(\n      'EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork'\n    )\n  }\n\n  const params = {\n    name,\n    chainId,\n    networkId: chainId,\n    genesis: {\n      timestamp,\n      gasLimit: parseInt(gasLimit), // geth gasLimit and difficulty are hex strings while ours are `number`s\n      difficulty: parseInt(difficulty),\n      nonce,\n      extraData,\n      mixHash,\n      coinbase,\n      baseFeePerGas,\n    },\n    hardfork: undefined as string | undefined,\n    hardforks: [] as ConfigHardfork[],\n    bootstrapNodes: [],\n    consensus:\n      config.clique !== undefined\n        ? {\n            type: 'poa',\n            algorithm: 'clique',\n            clique: {\n              // The recent geth genesis seems to be using blockperiodseconds\n              // and epochlength for clique specification\n              // see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n              period: config.clique.period ?? config.clique.blockperiodseconds,\n              epoch: config.clique.epoch ?? config.clique.epochlength,\n            },\n          }\n        : {\n            type: 'pow',\n            algorithm: 'ethash',\n            ethash: {},\n          },\n  }\n\n  const forkMap: { [key: string]: { name: string; postMerge?: boolean; isTimestamp?: boolean } } = {\n    [Hardfork.Homestead]: { name: 'homesteadBlock' },\n    [Hardfork.Dao]: { name: 'daoForkBlock' },\n    [Hardfork.TangerineWhistle]: { name: 'eip150Block' },\n    [Hardfork.SpuriousDragon]: { name: 'eip155Block' },\n    [Hardfork.Byzantium]: { name: 'byzantiumBlock' },\n    [Hardfork.Constantinople]: { name: 'constantinopleBlock' },\n    [Hardfork.Petersburg]: { name: 'petersburgBlock' },\n    [Hardfork.Istanbul]: { name: 'istanbulBlock' },\n    [Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },\n    [Hardfork.Berlin]: { name: 'berlinBlock' },\n    [Hardfork.London]: { name: 'londonBlock' },\n    [Hardfork.MergeForkIdTransition]: { name: 'mergeForkBlock', postMerge: mergeForkIdPostMerge },\n    [Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },\n    [Hardfork.ShardingForkDev]: { name: 'shardingForkTime', postMerge: true, isTimestamp: true },\n  }\n\n  // forkMapRev is the map from config field name to Hardfork\n  const forkMapRev = Object.keys(forkMap).reduce((acc, elem) => {\n    acc[forkMap[elem].name] = elem\n    return acc\n  }, {} as { [key: string]: string })\n  const configHardforkNames = Object.keys(config).filter(\n    (key) => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null\n  )\n\n  params.hardforks = configHardforkNames\n    .map((nameBlock) => ({\n      name: forkMapRev[nameBlock],\n      block:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true || typeof config[nameBlock] !== 'number'\n          ? null\n          : config[nameBlock],\n      timestamp:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true && typeof config[nameBlock] === 'number'\n          ? config[nameBlock]\n          : undefined,\n    }))\n    .filter((fork) => fork.block !== null || fork.timestamp !== undefined) as ConfigHardfork[]\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.block ?? Infinity) - (b.block ?? Infinity)\n  })\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.timestamp ?? genesisTimestamp) - (b.timestamp ?? genesisTimestamp)\n  })\n\n  if (config.terminalTotalDifficulty !== undefined) {\n    // Following points need to be considered for placement of merge hf\n    // - Merge hardfork can't be placed at genesis\n    // - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n    // - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n    //   necessary for e.g. withdrawals\n    const mergeConfig = {\n      name: Hardfork.Merge,\n      ttd: config.terminalTotalDifficulty,\n      block: null,\n    }\n\n    // Merge hardfork has to be placed before first hardfork that is dependent on merge\n    const postMergeIndex = params.hardforks.findIndex(\n      (hf: any) => forkMap[hf.name]?.postMerge === true\n    )\n    if (postMergeIndex !== -1) {\n      params.hardforks.splice(postMergeIndex, 0, mergeConfig as unknown as ConfigHardfork)\n    } else {\n      params.hardforks.push(mergeConfig as unknown as ConfigHardfork)\n    }\n  }\n\n  const latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined\n  params.hardfork = latestHardfork?.name\n  params.hardforks.unshift({ name: Hardfork.Chainstart, block: 0 })\n\n  return params\n}\n\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */\nexport function parseGethGenesis(json: any, name?: string, mergeForkIdPostMerge?: boolean) {\n  try {\n    if (['config', 'difficulty', 'gasLimit', 'alloc'].some((field) => !(field in json))) {\n      throw new Error('Invalid format, expected geth genesis fields missing')\n    }\n    if (name !== undefined) {\n      json.name = name\n    }\n    return parseGethParams(json, mergeForkIdPostMerge)\n  } catch (e: any) {\n    throw new Error(`Error parsing parameters file: ${e.message}`)\n  }\n}\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n"],"names":["common_1","require","util_1","types_1","util_2","exports","constructor","txData","opts","_opts$allowUnlimitedI","_opts$common","cache","hash","undefined","dataFee","activeCapabilities","DEFAULT_CHAIN","Chain","Mainnet","DEFAULT_HARDFORK","Hardfork","Merge","nonce","gasLimit","to","value","data","v","r","s","type","this","_type","Number","bufferToBigInt","toBuffer","txOptions","toB","vB","rB","sB","length","Address","_validateCannotExceedMaxInteger","createContract","allowUnlimitedInitCodeSize","common","_getCommon","isActivatedEIP","checkMaxInitCodeSize","supports","capability","includes","validate","stringError","arguments","errors","getBaseFee","push","concat","isSigned","verifySignature","_validateYParity","BigInt","msg","_errorMsg","Error","_validateHighS","gteHardfork","SECP256K1_ORDER_DIV_2","txFee","param","fee","getDataFee","toCreationAddress","txCreationFee","txDataZero","txDataNonZero","cost","i","dataLength","Math","ceil","buf","publicKey","getSenderPublicKey","unpadBuffer","e","getSenderAddress","publicToAddress","sign","privateKey","hackApplied","Capability","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","tx","_processSignature","index","indexOf","splice","chainId","chainIdBigInt","copy","Common","isSupportedChainId","chain","hardfork","custom","name","networkId","baseChain","_common$copy","values","bits","cannotEqual","key","Object","entries","MAX_UINT64","MAX_INTEGER","_validateNotArray","txDataKeys","Array","isArray","_getSharedErrorPostfix","bufferToHex","toString","hf","postfix","rlp_1","keccak_1","baseTransaction_1","TRANSACTION_TYPE_BUFFER","Buffer","from","padStart","FeeMarketEIP1559Transaction","BaseTransaction","_opts$freeze","super","accessList","maxFeePerGas","maxPriorityFeePerGas","accessListData","AccessLists","getAccessListData","AccessListJSON","verifyAccessList","freeze","fromTxData","fromSerializedTx","serialized","slice","equals","arrToBufArr","RLP","decode","fromValuesArray","validateNoLeadingZeroes","getDataFeeEIP2930","isFrozen","getUpfrontCost","baseFee","prio","maxBase","gasPrice","raw","bigIntToUnpaddedBuffer","serialize","base","encode","bufArrToArr","hashMessage","message","keccak256","getMessageToVerifySignature","ecrecover","toJSON","accessListJSON","getAccessListJSON","bigIntToHex","errorStr","AccessListEIP2930Transaction","Uint8Array","_this$accessList$leng","_this$accessList","_txParams","_txParams$gasLimit","txParams","assign","toType","gas","TypeOutput","input","setLengthLeft","eip1559Transaction_1","enumerable","get","eip2930Transaction_1","legacyTransaction_1","Transaction","transactionFactory_1","TransactionFactory","__exportStar","meetsEIP155","_v","chainIdDoubled","_validateTxV","_getMessageToSign","numSub","fromRpc_1","txType","fromSerializedData","fromBlockBodyData","isBuffer","fromEthersProvider","provider","txHash","prov","getProvider","fetchFromProvider","method","params","fromRPCTx","normalizeTxParams","isAccessListBuffer","firstItem","maxInitCodeSize","bufferAccessList","isAccessList","newAccessList","item","addressBuffer","address","storageItems","storageKeys","json","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","slot","accessListStorageKeyCost","accessListAddressCost","slots","crc_32_1","events_1","goerli","mainnet","rinkeby","ropsten","sepolia","eips_1","enums_1","hardforks_1","utils_1","EventEmitter","_opts$customChains","_this$_chainParams$de","_eips","_customChains","customChains","_chainParams","setChain","defaultHardfork","HARDFORK_CHANGES","hardforks","map","_hardfork","setHardfork","eips","setEIPs","chainParamsOrName","_opts$baseChain","standardChainParams","_getChainParams","CustomChain","PolygonMainnet","PolygonMumbai","ArbitrumRinkebyTestnet","ArbitrumOne","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","fromGethGenesis","genesisJson","_ref","_genesisParams$name","genesisHash","mergeForkIdPostMerge","genesisParams","parseGethGenesis","setForkHashes","initializedChains","_getInitializedChains","Boolean","required","block","existing","hfChanges","emit","getHardforkByBlockNumber","blockNumber","td","timestamp","hfs","filter","ttd","mergeIndex","findIndex","hfIndex","reverse","hfStartIndex","reduce","acc","_hf$timestamp","max","_hf$timestamp2","min","setHardforkByBlockNumber","_getHardfork","eip","EIPs","minHF","requiredEIPs","elem","topic","paramByEIP","paramByHardfork","_value","hfEIPs","valueEIP","eipParams","paramByBlock","hardforkIsActiveOnBlock","hfBlock","hardforkBlock","activeOnBlock","hardforkGteHardfork","hardfork1","hardfork2","_hardfork2","posHf1","posHf2","_hardfork3","_this$_getHardfork","hardforkTimestamp","_hardfork4","_this$_getHardfork2","eipBlock","hardforkTTD","_hardfork5","_this$_getHardfork3","isHardforkBlock","_hardfork6","nextHardforkBlockOrTimestamp","_hardfork7","_hfs$hfIndex$timestam","_nextHf$timestamp","currHfTimeOrBlock","nextHf","find","_hf$timestamp3","hfTimeOrBlock","nextHfBlock","nextHardforkBlock","_hardfork8","isNextHardforkBlock","_hardfork9","_calcForkHash","hfBuffer","alloc","prevBlockOrTime","blockOrTime","hfBlockBuffer","inputBuffer","forkhash","intToBuffer","forkHash","_hardfork10","hardforkForForkHash","resArray","_hf$timestamp4","genesis","bootstrapNodes","dnsNetworks","chainName","consensusType","_value2","consensusAlgorithm","_value3","consensusConfig","_ref2","_value4","create","getPrototypeOf","removeAllListeners","names","id","toLowerCase","chains","ConsensusType","ConsensusAlgorithm","chainstart","homestead","dao","tangerineWhistle","spuriousDragon","byzantium","constantinople","petersburg","istanbul","muirGlacier","berlin","london","shanghai","arrowGlacier","grayGlacier","mergeForkIdTransition","merge","shardingFork","parseGethParams","_config$clique$period","_config$clique$epoch","config","difficulty","mixHash","coinbase","baseFeePerGas","extraData","genesisTimestamp","isHexPrefixed","intToHex","parseInt","stripHexPrefix","formatNonce","eip155Block","eip158Block","consensus","clique","algorithm","period","blockperiodseconds","epoch","epochlength","ethash","forkMap","Homestead","Dao","TangerineWhistle","SpuriousDragon","Byzantium","Constantinople","Petersburg","Istanbul","MuirGlacier","London","MergeForkIdTransition","postMerge","Shanghai","isTimestamp","ShardingForkDev","forkMapRev","keys","configHardforkNames","nameBlock","fork","sort","a","b","_a$block","_b$block","Infinity","_a$timestamp","_b$timestamp","terminalTotalDifficulty","mergeConfig","postMergeIndex","_forkMap$hf$name","latestHardfork","unshift","Chainstart","some","field","nacl","__importStar","naclUtil","encrypt","version","isNullish","ephemeralKeyPair","box","keyPair","pubKeyUInt8Array","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","decrypt","_ref3","encryptedData","receiverPrivateKeyUint8Array","naclDecodeHex","receiverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","output","encodeUTF8","msgHex","msgBase64","dataWithPadding","padding","modVal","byteLength","JSON","stringify","padLength","repeat","_ref4","parse","privateKeyUint8Array","encryptionPublicKey","bn_js_1","__importDefault","ethjs_util_1","endsWith","parseTypeArray","tmp","match","parseTypeN","exec","parseNumber","arg","default","prototype","hasOwnProperty","call","isBN","solidityHexValue","bitsize","subType","replace","arraySize","arrayValues","join","bytesize","startsWith","size","normalize","setLengthRight","num","bitLength","toArrayLike","toTwos","elementaryName","encodeSingle","ret","lastIndexOf","zeros","nArg","isNeg","parseTypeNxM","mul","pow","isDynamic","types","headLength","forEach","cur","concatSig","getPublicKeyFor","signature","messageHash","hashPersonalMessage","legacyToBuffer","recoverPublicKey","sig","sender","ethereumjs_abi_utils_1","SignTypedDataVersion","validateVersion","allowedVersions","encodeField","V3","V4","encodeData","numberToBuffer","isHexString","prepend","parsedType","typeValuePairs","rawEncode","t","primaryType","encodedTypes","encodedValues","hashType","encodeType","result","unsortedDeps","findTypeDependencies","delete","deps","results","Set","has","add","hashStruct","encoded","hashed","encodedHashType","sanitizeData","sanitizedData","TYPED_MESSAGE_SCHEMA","properties","EIP712Domain","eip712DomainHash","typedData","domain","_typedSignatureHash","error","schema","solidityPack","fill","additionalProperties","items","eip712Hash","parts","hashBuffer","V1","TypedDataUtils","_ref5","padWithZeroes","hexString","targetLength","test","String","rSig","fromSigned","sSig","vSig","bufferToInt","rStr","toUnsigned","sStr","vStr","addHexPrefix","sigParams","fromRpcSig","buffer","hexVal","module","assert","val","inherits","ctor","superCtor","super_","TempCtor","BN","number","endian","negative","words","red","_init","wordSize","window","parseHex4Bits","string","c","charCodeAt","parseHexByte","lowerBound","parseBase","str","start","end","len","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","j","w","off","strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","dest","clone","_expand","_normSign","inspect","groupSizes","groupBases","smallMulTo","self","out","lo","carry","k","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","toNumber","ArrayType","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","hi","zeroBits","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","_strip","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","gf","init","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D2","X","Y","I","ts64","vn","xi","yi","d","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","update","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","floor","sel25519","pack25519","neq25519","par25519","unpack25519","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","f","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","bytes","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","th","tl","wh","Int32Array","wl","pos","crypto_hash","cswap","pack","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","TypeError","cleanup","arr","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","keyLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","detached","verify","fromSeed","seed","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","msCrypto","getRandomValues","CHAIN_NAMESPACES","getChainConfig","chainNamespace","finalChainId","getDefaultNetworkId","rpcTarget","displayName","blockExplorer","ticker","tickerName","decimals","getEvmChainConfig","getSolanaChainConfig","Web3AuthError","CustomError","code","_defineProperty","defineProperty","WalletInitializationError","fromCode","extraMessage","messages","notFound","notInstalled","notReady","windowBlocked","windowClosed","incompatibleChainNameSpace","duplicateAdapterError","invalidProviderConfigError","providerNotReadyError","rpcConnectionError","invalidParams","invalidNetwork","WalletLoginError","connectionError","disconnectionError","notConnectedError","popupClosed","mfaEnabled","MULTI_CHAIN_ADAPTERS","OPENLOGIN","WALLET_CONNECT_V1","WALLET_CONNECT_V2","SOLANA_ADAPTERS","_objectSpread$1","TORUS_SOLANA","PHANTOM","SOLFLARE","SLOPE","EVM_ADAPTERS","TORUS_EVM","METAMASK","COINBASE","ADAPTER_STATUS","NOT_READY","READY","CONNECTING","CONNECTED","DISCONNECTED","ERRORED","_objectSpread","ADAPTER_DATA_UPDATED","log","loglevel","isHexStrict","hex","resemblesAddress","createWalletMiddleware","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","async","validateAndNormalizeKeyholder","req","normalizedAccounts","_address","normalizedAddress","ethErrors","rpc","fetchPrivateKey","methodNotSupported","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","private_key","eth_coinbase","accounts","eth_sendTransaction","eth_signTransaction","eth_sign","msgParams","_objectSpread$5","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","firstParam","secondParam","extraParams","warning","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","mergeMiddleware","eth_syncing","createChainIdMiddleware","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","fetchMiddleware","createFetchMiddleware","networkMiddleware","WalletConnectProvider","BaseProvider","state","connector","chainConfig","_objectSpread$4","skipLookupNetwork","enable","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","switchChain","addChain","lookup","currentChainConfig","sendCustomRequest","rpcUrls","blockExplorerUrls","nativeCurrency","symbol","configure","lookupNetwork","connected","connectedHexChainId","sendTransaction","signTransaction","signMessage","signPersonalMessage","signTypedData","getProviderHandlers$1","ethMiddleware","engine","JRPCEngine","providerFromEngine","updateProviderEngineProxy","on","payload","connectedChainId","rpcUrl","maybeConfig","providerFactory","BIG_NUMBER_WEI_MULTIPLIER","BigNumber","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","dec","toNormalizedDenomination","WEI","bigNumber","GWEI","ETH","toSpecifiedDenomination","times","dp","ROUND_HALF_UP","baseChange","conversionUtil","fromNumericBase","toNumericBase","fromDenomination","toDenomination","numberOfDecimals","convertedValue","ROUND_HALF_DOWN","converter","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","normalizeGWEIDecimalNumbers","validateTypedMessageParams","parameters","activeChainId","_data$domain","isValidAddress","typedSignatureHash","validation","jsonschema","isNaN","invalidInput","signTx","privKey","txFormatter","finalTxParams","formatTransaction","getCommonConfiguration","getProviderHandlers","getProviderEngineProxy","privateToAddress","providerEngineProxy","signedTx","privKeyBuffer","personalSign","debug","_objectSpread$2","info","getEncryptionPublicKey","stripped","buff","bnToHex","inputBn","hexToBn","inputHex","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","TransactionFormatter","providerProxy","isEIP1559Compatible","getEIP1559Compatibility","customChainParams","clonedTxParams","defaultGasLimit","getDefaultGasLimit","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","getDefaultGasFees","BigNumber$1","fetchEthGasPriceEstimate","latestBlock","fetchGasFeeEstimateData","isLegacyGasAPICompatible","gasData","gasFeeEstimates","url","estimates","_objectSpread$3","estimatedBaseFee","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","fetchEip1159GasEstimates","gasEstimateType","referrer","referrerPolicy","SafeGasPrice","ProposeGasPrice","FastGasPrice","fetchLegacyGasPriceEstimates","estimateTxGas","txMeta","analyzeGasUsage","estimatedGasHex","targetBN","numerator","denominator","numberBN","denomBN","BnMultiplyByFraction","warn","blockGasLimit","addGasBuffer","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","upperGasLimitBn","bufferedGasLimitBn","determineTransactionCategory","txParameters","txCategory","transactionCategory","TWENTY_ONE_THOUSAND","EthereumPrivateKeyProvider","bind","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","updateAccount","network","chainDisconnected","wallet_addEthereumChain","_req$params","chainParams","wallet_switchEthereumChain","_req$params2","createChainSwitchMiddleware","updatePrivatekey","wallet_updateAccount","_req$params3","accountParams","createAccountMiddleware","factory","CRC32","T0","table","signed_crc_table","TT","T","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","DO_NOT_EXPORT_CRC","padToEven","arrayContainsArray","superset","subset","getBinarySize","fromAscii","stringValue","fromUtf8","toAscii","substring","substr","fromCharCode","toUtf8","getKeys","allowEmpty","helpers","ValidatorResult","SchemaError","attribute","validators","testSchemaNoThrow","instance","options","callback","throwError","throwAll","validateSchema","valid","Function","getEnumerableProperty","object","propertyIsEnumerable","testAdditionalProperty","property","addError","argument","preValidateProperty","makeChild","importErrors","testType","list","$id","anyOf","inner","title","nestedErrors","allOf","oneOf","count","if","isSchema","ifValid","then","else","propertyNames","subschema","prop","patternProperties","pattern","regexp","RegExp","_e","minProperties","maxProperties","array","every","additionalItems","contains","minimum","exclusiveMinimum","maximum","exclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","testArrays","deepCompareStrict","multipleOf","divisibleBy","format","disableFormat","isFormat","minLength","hsp","maxLength","minItems","maxItems","uniqueItems","dependencies","dep","childContext","propertyPath","not","disallow","notTypes","schemaId","uri","ValidationError","path","sum","makeSuffix","stack","throwFirst","stringizer","ValidatorResultError","captureStackTrace","detail","validatorType","SchemaContext","schemas","resolve","target","propertyName","FORMAT_REGEXPS","parseFloat","regex","ipv4","validator","customFormats","deepMerger","dst","deepMerge","copyist","src","copyistWithDeepMerge","pathEncoder","encodeURIComponent","aKeys","bKeys","objectGetPath","decodeURIComponent","encodePath","decimalPlaces","decimalParts","Validator","SchemaScanResult","scan","urilib","found","ref","scanSchema","baseuri","$ref","resolvedUri","ourBase","scanArray","extends","scanObject","definitions","unresolvedRefs","attributes","shouldResolve","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","schemaobj","schemaTraverser","superResolve","switchSchema","resolved","subctx","skipAttributes","ignoreProperties","validatorErr","allowUnknownAttributes","rewrite","parsed","fragment","document","isFinite","integer","boolean","date","Date","any","root","util","validateBase64","unescape","escape","atob","btoa"],"sourceRoot":""}