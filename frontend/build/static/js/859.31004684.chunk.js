"use strict";(self.webpackChunkethglobalistanbul=self.webpackChunkethglobalistanbul||[]).push([[859],{80226:e=>{e.exports=function(){let{mustBeMetaMask:e=!1,silent:t=!1,timeout:r=3e3}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(){if("boolean"!==typeof e)throw new Error("@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.");if("boolean"!==typeof t)throw new Error("@metamask/detect-provider: Expected option 'silent' to be a boolean.");if("number"!==typeof r)throw new Error("@metamask/detect-provider: Expected option 'timeout' to be a number.")}();let o=!1;return new Promise((n=>{function i(){if(o)return;o=!0,window.removeEventListener("ethereum#initialized",i);const{ethereum:r}=window;if(!r||e&&!r.isMetaMask){const o=e&&r?"Non-MetaMask window.ethereum detected.":"Unable to detect window.ethereum.";!t&&console.error("@metamask/detect-provider:",o),n(null)}else n(r)}window.ethereum?i():(window.addEventListener("ethereum#initialized",i,{once:!0}),setTimeout((()=>{i()}),r))}))}},99859:(e,t,r)=>{r.r(t),r.d(t,{MetamaskAdapter:()=>P});var o=r(4942),n=r(80226),i=r.n(n),a=(r(13453),r(65957),r(688)),s=(r(58489),r(30456),r(62895)),c=r.n(s);const d="eip155",l="eip155";class h extends a.s{constructor(e,t){super(t),(0,o.Z)(this,"code",void 0),(0,o.Z)(this,"message",void 0),this.code=e,this.message=t||"",Object.defineProperty(this,"name",{value:"Web3AuthError"})}toJSON(){return{name:this.name,code:this.code,message:this.message}}toString(){return JSON.stringify(this.toJSON())}}class m extends h{constructor(e,t){super(e,t),Object.defineProperty(this,"name",{value:"WalletInitializationError"})}static fromCode(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new m(e,"".concat(m.messages[e],", ").concat(t))}static notFound(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5001,e)}static notInstalled(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5002,e)}static notReady(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5003,e)}static windowBlocked(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5004,e)}static windowClosed(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5005,e)}static incompatibleChainNameSpace(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5006,e)}static duplicateAdapterError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5007,e)}static invalidProviderConfigError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5008,e)}static providerNotReadyError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5009,e)}static rpcConnectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5010,e)}static invalidParams(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5011,e)}static invalidNetwork(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5013,e)}}(0,o.Z)(m,"messages",{5e3:"Custom",5001:"Wallet is not found",5002:"Wallet is not installed",5003:"Wallet is not ready yet",5004:"Wallet window is blocked",5005:"Wallet window has been closed by the user",5006:"Incompatible chain namespace provided",5007:"Adapter has already been included",5008:"Invalid provider Config",5009:"Provider is not ready yet",5010:"Failed to connect with rpc url",5011:"Invalid params passed in",5013:"Invalid network provided"});class u extends h{constructor(e,t){super(e,t),Object.defineProperty(this,"name",{value:"WalletLoginError"})}static fromCode(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new u(e,"".concat(u.messages[e],". ").concat(t))}static connectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return u.fromCode(5111,e)}static disconnectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return u.fromCode(5112,e)}static notConnectedError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return u.fromCode(5113,e)}static popupClosed(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return u.fromCode(5114,e)}static mfaEnabled(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return u.fromCode(5115,e)}}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function w(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){(0,o.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}(0,o.Z)(u,"messages",{5e3:"Custom",5111:"Failed to connect with wallet",5112:"Failed to disconnect from wallet",5113:"Wallet is not connected",5114:"Wallet popup has been closed by the user",5115:"User has already enabled mfa, please use the @web3auth/web3auth-web sdk for login with mfa"});const v={OPENLOGIN:"openlogin",WALLET_CONNECT_V1:"wallet-connect-v1",WALLET_CONNECT_V2:"wallet-connect-v2"},E=w({TORUS_SOLANA:"torus-solana",PHANTOM:"phantom",SOLFLARE:"solflare",SLOPE:"slope"},v),f=w({TORUS_EVM:"torus-evm",METAMASK:"metamask",COINBASE:"coinbase"},v),O=w(w({},f),E);E.TORUS_SOLANA,E.PHANTOM,E.SOLFLARE,E.SLOPE,f.TORUS_EVM,f.METAMASK,f.COINBASE;function b(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function g(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?b(Object(r),!0).forEach((function(t){(0,o.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):b(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const C="external",y={NOT_READY:"not_ready",READY:"ready",CONNECTING:"connecting",CONNECTED:"connected",DISCONNECTED:"disconnected",ERRORED:"errored"},N=g(g({},y),{},{ADAPTER_DATA_UPDATED:"adapter_data_updated"});var k=c().getLogger("web3auth-logger");var A=r(92108);class P extends A.d{constructor(){super(...arguments),(0,o.Z)(this,"adapterNamespace",l),(0,o.Z)(this,"currentChainNamespace",d),(0,o.Z)(this,"type",C),(0,o.Z)(this,"name",O.METAMASK),(0,o.Z)(this,"status",y.NOT_READY),(0,o.Z)(this,"metamaskProvider",null)}get provider(){return this.status===y.CONNECTED&&this.metamaskProvider?this.metamaskProvider:null}set provider(e){throw new Error("Not implemented")}async init(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(await super.init(e),super.checkInitializationRequirements(),this.metamaskProvider=await i()({mustBeMetaMask:!0}),!this.metamaskProvider)throw m.notInstalled("Metamask extension is not installed");this.status=y.READY,this.emit(N.READY,O.METAMASK);try{k.debug("initializing metamask adapter"),e.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(t){this.emit(N.ERRORED,t)}}async connect(){if(super.checkConnectionRequirements(),!this.metamaskProvider)throw u.notConnectedError("Not able to connect with metamask");this.status=y.CONNECTING,this.emit(N.CONNECTING,{adapter:O.METAMASK});try{await this.metamaskProvider.request({method:"eth_requestAccounts"});const{chainId:e}=this.metamaskProvider;if(e!==this.chainConfig.chainId&&await this.switchChain(this.chainConfig),this.status=y.CONNECTED,!this.provider)throw u.notConnectedError("Failed to connect with provider");return this.provider.once("disconnect",(()=>{this.disconnect()})),this.emit(N.CONNECTED,{adapter:O.METAMASK,reconnected:this.rehydrated}),this.provider}catch(e){throw this.status=y.READY,this.rehydrated=!1,this.emit(N.ERRORED,e),u.connectionError("Failed to login with metamask wallet")}}async disconnect(){var e;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};await super.disconnectSession(),null===(e=this.provider)||void 0===e||e.removeAllListeners(),t.cleanup?(this.status=y.NOT_READY,this.metamaskProvider=null):this.status=y.READY,await super.disconnect()}async getUserInfo(){if(this.status!==y.CONNECTED)throw u.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async switchChain(e){if(!this.metamaskProvider)throw u.notConnectedError("Not connected with wallet");try{await this.metamaskProvider.request({method:"wallet_switchEthereumChain",params:[{chainId:e.chainId}]})}catch(t){if(4902!==t.code)throw t;await this.metamaskProvider.request({method:"wallet_addEthereumChain",params:[{chainId:e.chainId,chainName:e.displayName,rpcUrls:[e.rpcTarget],blockExplorerUrls:[e.blockExplorer],nativeCurrency:{name:e.tickerName,symbol:e.ticker,decimals:e.decimals||18}}]})}}}}}]);
//# sourceMappingURL=859.31004684.chunk.js.map