(self.webpackChunkethglobalistanbul=self.webpackChunkethglobalistanbul||[]).push([[873,848,833],{308:(t,e,n)=>{"use strict";n.r(e),n.d(e,{PhantomAdapter:()=>A});var o=n(4942),r=(n(13453),n(65957),n(688)),i=(n(58489),n(30456),n(62895)),a=n.n(i);const s="solana",l="solana";class c extends r.s{constructor(t,e){super(e),(0,o.Z)(this,"code",void 0),(0,o.Z)(this,"message",void 0),this.code=t,this.message=e||"",Object.defineProperty(this,"name",{value:"Web3AuthError"})}toJSON(){return{name:this.name,code:this.code,message:this.message}}toString(){return JSON.stringify(this.toJSON())}}class d extends c{constructor(t,e){super(t,e),Object.defineProperty(this,"name",{value:"WalletInitializationError"})}static fromCode(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new d(t,"".concat(d.messages[t],", ").concat(e))}static notFound(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return d.fromCode(5001,t)}static notInstalled(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return d.fromCode(5002,t)}static notReady(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return d.fromCode(5003,t)}static windowBlocked(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return d.fromCode(5004,t)}static windowClosed(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return d.fromCode(5005,t)}static incompatibleChainNameSpace(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return d.fromCode(5006,t)}static duplicateAdapterError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return d.fromCode(5007,t)}static invalidProviderConfigError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return d.fromCode(5008,t)}static providerNotReadyError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return d.fromCode(5009,t)}static rpcConnectionError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return d.fromCode(5010,t)}static invalidParams(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return d.fromCode(5011,t)}static invalidNetwork(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return d.fromCode(5013,t)}}(0,o.Z)(d,"messages",{5e3:"Custom",5001:"Wallet is not found",5002:"Wallet is not installed",5003:"Wallet is not ready yet",5004:"Wallet window is blocked",5005:"Wallet window has been closed by the user",5006:"Incompatible chain namespace provided",5007:"Adapter has already been included",5008:"Invalid provider Config",5009:"Provider is not ready yet",5010:"Failed to connect with rpc url",5011:"Invalid params passed in",5013:"Invalid network provided"});class h extends c{constructor(t,e){super(t,e),Object.defineProperty(this,"name",{value:"WalletLoginError"})}static fromCode(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new h(t,"".concat(h.messages[t],". ").concat(e))}static connectionError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return h.fromCode(5111,t)}static disconnectionError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return h.fromCode(5112,t)}static notConnectedError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return h.fromCode(5113,t)}static popupClosed(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return h.fromCode(5114,t)}static mfaEnabled(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return h.fromCode(5115,t)}}function u(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function p(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?u(Object(n),!0).forEach((function(e){(0,o.Z)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}(0,o.Z)(h,"messages",{5e3:"Custom",5111:"Failed to connect with wallet",5112:"Failed to disconnect from wallet",5113:"Wallet is not connected",5114:"Wallet popup has been closed by the user",5115:"User has already enabled mfa, please use the @web3auth/web3auth-web sdk for login with mfa"});const w={OPENLOGIN:"openlogin",WALLET_CONNECT_V1:"wallet-connect-v1",WALLET_CONNECT_V2:"wallet-connect-v2"},v=p({TORUS_SOLANA:"torus-solana",PHANTOM:"phantom",SOLFLARE:"solflare",SLOPE:"slope"},w),m=p({TORUS_EVM:"torus-evm",METAMASK:"metamask",COINBASE:"coinbase"},w),f=p(p({},m),v);v.TORUS_SOLANA,v.PHANTOM,v.SOLFLARE,v.SLOPE,m.TORUS_EVM,m.METAMASK,m.COINBASE;function O(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function E(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?O(Object(n),!0).forEach((function(e){(0,o.Z)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):O(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}const g="external",C={NOT_READY:"not_ready",READY:"ready",CONNECTING:"connecting",CONNECTED:"connected",DISCONNECTED:"disconnected",ERRORED:"errored"},y=E(E({},C),{},{ADAPTER_DATA_UPDATED:"adapter_data_updated"});var b=a().getLogger("web3auth-logger");var N=n(72584),P=n(57945);function _(t,e,n){return new Promise(((o,r)=>{n>0?setTimeout((async()=>{const i=await t();i&&o(i),i||_(t,e,n-1).then((t=>(o(t),t))).catch((t=>r(t)))}),e):o(!1)}))}const D=async function(){var t;let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{interval:1e3,count:3};if("undefined"!==typeof window&&!(null===(t=window.solana)||void 0===t||!t.isPhantom))return window.solana;return await _((()=>{var t;return null===(t=window.solana)||void 0===t?void 0:t.isPhantom}),e.interval,e.count)?window.solana:null};class A extends N.v{constructor(){super(...arguments),(0,o.Z)(this,"name",f.PHANTOM),(0,o.Z)(this,"adapterNamespace",l),(0,o.Z)(this,"currentChainNamespace",s),(0,o.Z)(this,"type",g),(0,o.Z)(this,"status",C.NOT_READY),(0,o.Z)(this,"_wallet",null),(0,o.Z)(this,"phantomProvider",null),(0,o.Z)(this,"_onDisconnect",(()=>{this._wallet&&(this._wallet.off("disconnect",this._onDisconnect),this.rehydrated=!1,this.status=this.status===C.CONNECTED?C.READY:C.NOT_READY,this.emit(y.DISCONNECTED))}))}get isWalletConnected(){var t;return!(null===(t=this._wallet)||void 0===t||!t.isConnected||this.status!==C.CONNECTED)}get provider(){var t;return(null===(t=this.phantomProvider)||void 0===t?void 0:t.provider)||null}set provider(t){throw new Error("Not implemented")}async init(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(await super.init(t),super.checkInitializationRequirements(),this._wallet=await D({interval:500,count:3}),!this._wallet)throw d.notInstalled();this.phantomProvider=new P.PhantomInjectedProvider({config:{chainConfig:this.chainConfig}}),this.status=C.READY,this.emit(y.READY,f.PHANTOM);try{b.debug("initializing phantom adapter"),t.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(e){b.error("Failed to connect with cached phantom provider",e),this.emit("ERRORED",e)}}async connect(){var t=this;try{if(super.checkConnectionRequirements(),this.status=C.CONNECTING,this.emit(y.CONNECTING,{adapter:f.PHANTOM}),!this._wallet)throw d.notInstalled();if(this._wallet.isConnected)await this.connectWithProvider(this._wallet);else{const n=this._wallet._handleDisconnect;try{await new Promise(((e,o)=>{this._wallet?(this._wallet.once("connect",(async()=>{await this.connectWithProvider(this._wallet),e(this.provider)})),this._wallet._handleDisconnect=function(){o(d.windowClosed());for(var e=arguments.length,r=new Array(e),i=0;i<e;i++)r[i]=arguments[i];return n.apply(t._wallet,r)},this._wallet.connect().catch((t=>{o(t)}))):o(d.notInstalled())}))}catch(e){if(e instanceof c)throw e;throw h.connectionError(null===e||void 0===e?void 0:e.message)}finally{this._wallet._handleDisconnect=n}}if(!this._wallet.publicKey)throw h.connectionError();return this._wallet.on("disconnect",this._onDisconnect),this.provider}catch(e){throw this.status=C.READY,this.rehydrated=!1,this.emit(y.ERRORED,e),e}}async disconnect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};await super.disconnectSession();try{var e;await(null===(e=this._wallet)||void 0===e?void 0:e.disconnect()),t.cleanup&&(this.status=C.NOT_READY,this.phantomProvider=null,this._wallet=null),await super.disconnect()}catch(n){this.emit(y.ERRORED,h.disconnectionError(null===n||void 0===n?void 0:n.message))}}async getUserInfo(){if(!this.isWalletConnected)throw h.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async connectWithProvider(t){if(!this.phantomProvider)throw h.connectionError("No phantom provider");return await this.phantomProvider.setupProvider(t),this.status=C.CONNECTED,this.emit(y.CONNECTED,{adapter:f.PHANTOM,reconnected:this.rehydrated}),this.provider}}},78848:()=>{}}]);
//# sourceMappingURL=873.e77005c6.chunk.js.map